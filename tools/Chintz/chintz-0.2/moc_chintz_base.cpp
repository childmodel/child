/****************************************************************************
** Chintz_base meta object code from reading C++ file 'chintz_base.h'
**
** Created: Mon Jan 28 11:24:39 2002
**      by: The Qt MOC ($Id: moc_chintz_base.cpp,v 1.1 2003-06-04 10:19:34 childcvs Exp $)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#if !defined(Q_MOC_OUTPUT_REVISION)
#define Q_MOC_OUTPUT_REVISION 9
#elif Q_MOC_OUTPUT_REVISION != 9
#error "Moc format conflict - please regenerate all moc files"
#endif

#include "chintz_base.h"
#include <qmetaobject.h>
#include <qapplication.h>



const char *Chintz_base::className() const
{
    return "Chintz_base";
}

QMetaObject *Chintz_base::metaObj = 0;

void Chintz_base::initMetaObject()
{
    if ( metaObj )
	return;
    if ( qstrcmp(QDialog::className(), "QDialog") != 0 )
	badSuperclassWarning("Chintz_base","QDialog");
    (void) staticMetaObject();
}

#ifndef QT_NO_TRANSLATION

QString Chintz_base::tr(const char* s)
{
    return qApp->translate( "Chintz_base", s, 0 );
}

QString Chintz_base::tr(const char* s, const char * c)
{
    return qApp->translate( "Chintz_base", s, c );
}

#endif // QT_NO_TRANSLATION

QMetaObject* Chintz_base::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    (void) QDialog::staticMetaObject();
#ifndef QT_NO_PROPERTIES
#endif // QT_NO_PROPERTIES
    typedef void (Chintz_base::*m1_t0)();
    typedef void (QObject::*om1_t0)();
    typedef bool (Chintz_base::*m1_t1)();
    typedef bool (QObject::*om1_t1)();
    typedef void (Chintz_base::*m1_t2)();
    typedef void (QObject::*om1_t2)();
    typedef void (Chintz_base::*m1_t3)();
    typedef void (QObject::*om1_t3)();
    typedef void (Chintz_base::*m1_t4)();
    typedef void (QObject::*om1_t4)();
    typedef void (Chintz_base::*m1_t5)();
    typedef void (QObject::*om1_t5)();
    typedef void (Chintz_base::*m1_t6)();
    typedef void (QObject::*om1_t6)();
    typedef void (Chintz_base::*m1_t7)(const QString&);
    typedef void (QObject::*om1_t7)(const QString&);
    typedef void (Chintz_base::*m1_t8)();
    typedef void (QObject::*om1_t8)();
    typedef void (Chintz_base::*m1_t9)();
    typedef void (QObject::*om1_t9)();
    typedef void (Chintz_base::*m1_t10)();
    typedef void (QObject::*om1_t10)();
    typedef void (Chintz_base::*m1_t11)();
    typedef void (QObject::*om1_t11)();
    typedef void (Chintz_base::*m1_t12)(ofstream&);
    typedef void (QObject::*om1_t12)(ofstream&);
    typedef void (Chintz_base::*m1_t13)(const QString&);
    typedef void (QObject::*om1_t13)(const QString&);
    typedef void (Chintz_base::*m1_t14)(int);
    typedef void (QObject::*om1_t14)(int);
    typedef void (Chintz_base::*m1_t15)(int);
    typedef void (QObject::*om1_t15)(int);
    typedef void (Chintz_base::*m1_t16)(int);
    typedef void (QObject::*om1_t16)(int);
    typedef void (Chintz_base::*m1_t17)(int);
    typedef void (QObject::*om1_t17)(int);
    typedef void (Chintz_base::*m1_t18)(const QString&);
    typedef void (QObject::*om1_t18)(const QString&);
    typedef void (Chintz_base::*m1_t19)(const QString&);
    typedef void (QObject::*om1_t19)(const QString&);
    typedef void (Chintz_base::*m1_t20)(const QString&);
    typedef void (QObject::*om1_t20)(const QString&);
    typedef void (Chintz_base::*m1_t21)(const QString&);
    typedef void (QObject::*om1_t21)(const QString&);
    typedef void (Chintz_base::*m1_t22)(const QString&);
    typedef void (QObject::*om1_t22)(const QString&);
    typedef void (Chintz_base::*m1_t23)(const QString&);
    typedef void (QObject::*om1_t23)(const QString&);
    typedef void (Chintz_base::*m1_t24)(bool);
    typedef void (QObject::*om1_t24)(bool);
    typedef void (Chintz_base::*m1_t25)(const QString&);
    typedef void (QObject::*om1_t25)(const QString&);
    typedef void (Chintz_base::*m1_t26)(const QString&);
    typedef void (QObject::*om1_t26)(const QString&);
    typedef void (Chintz_base::*m1_t27)(int);
    typedef void (QObject::*om1_t27)(int);
    typedef void (Chintz_base::*m1_t28)(int);
    typedef void (QObject::*om1_t28)(int);
    typedef void (Chintz_base::*m1_t29)(int);
    typedef void (QObject::*om1_t29)(int);
    typedef void (Chintz_base::*m1_t30)(int);
    typedef void (QObject::*om1_t30)(int);
    typedef void (Chintz_base::*m1_t31)(int);
    typedef void (QObject::*om1_t31)(int);
    typedef void (Chintz_base::*m1_t32)();
    typedef void (QObject::*om1_t32)();
    typedef void (Chintz_base::*m1_t33)(const QString&);
    typedef void (QObject::*om1_t33)(const QString&);
    typedef void (Chintz_base::*m1_t34)(const QString&);
    typedef void (QObject::*om1_t34)(const QString&);
    typedef void (Chintz_base::*m1_t35)();
    typedef void (QObject::*om1_t35)();
    typedef void (Chintz_base::*m1_t36)(const QString&);
    typedef void (QObject::*om1_t36)(const QString&);
    typedef void (Chintz_base::*m1_t37)();
    typedef void (QObject::*om1_t37)();
    typedef void (Chintz_base::*m1_t38)(const QString&);
    typedef void (QObject::*om1_t38)(const QString&);
    typedef void (Chintz_base::*m1_t39)();
    typedef void (QObject::*om1_t39)();
    typedef void (Chintz_base::*m1_t40)(const QString&);
    typedef void (QObject::*om1_t40)(const QString&);
    typedef void (Chintz_base::*m1_t41)(const QString&);
    typedef void (QObject::*om1_t41)(const QString&);
    typedef void (Chintz_base::*m1_t42)(const QString&);
    typedef void (QObject::*om1_t42)(const QString&);
    typedef void (Chintz_base::*m1_t43)(int);
    typedef void (QObject::*om1_t43)(int);
    typedef void (Chintz_base::*m1_t44)(bool);
    typedef void (QObject::*om1_t44)(bool);
    typedef void (Chintz_base::*m1_t45)(int);
    typedef void (QObject::*om1_t45)(int);
    typedef void (Chintz_base::*m1_t46)(bool);
    typedef void (QObject::*om1_t46)(bool);
    typedef void (Chintz_base::*m1_t47)(const QString&);
    typedef void (QObject::*om1_t47)(const QString&);
    typedef void (Chintz_base::*m1_t48)(const QString&);
    typedef void (QObject::*om1_t48)(const QString&);
    typedef void (Chintz_base::*m1_t49)(const QString&);
    typedef void (QObject::*om1_t49)(const QString&);
    typedef void (Chintz_base::*m1_t50)(const QString&);
    typedef void (QObject::*om1_t50)(const QString&);
    typedef void (Chintz_base::*m1_t51)(const QString&);
    typedef void (QObject::*om1_t51)(const QString&);
    typedef void (Chintz_base::*m1_t52)(const QString&);
    typedef void (QObject::*om1_t52)(const QString&);
    typedef void (Chintz_base::*m1_t53)(const QString&);
    typedef void (QObject::*om1_t53)(const QString&);
    typedef void (Chintz_base::*m1_t54)(const QString&);
    typedef void (QObject::*om1_t54)(const QString&);
    typedef void (Chintz_base::*m1_t55)(bool);
    typedef void (QObject::*om1_t55)(bool);
    typedef void (Chintz_base::*m1_t56)(const QString&);
    typedef void (QObject::*om1_t56)(const QString&);
    typedef void (Chintz_base::*m1_t57)(const QString&);
    typedef void (QObject::*om1_t57)(const QString&);
    typedef void (Chintz_base::*m1_t58)(const QString&);
    typedef void (QObject::*om1_t58)(const QString&);
    typedef void (Chintz_base::*m1_t59)(const QString&);
    typedef void (QObject::*om1_t59)(const QString&);
    typedef void (Chintz_base::*m1_t60)(const QString&);
    typedef void (QObject::*om1_t60)(const QString&);
    typedef void (Chintz_base::*m1_t61)(const QString&);
    typedef void (QObject::*om1_t61)(const QString&);
    typedef void (Chintz_base::*m1_t62)(int);
    typedef void (QObject::*om1_t62)(int);
    typedef void (Chintz_base::*m1_t63)(bool);
    typedef void (QObject::*om1_t63)(bool);
    typedef void (Chintz_base::*m1_t64)(const QString&);
    typedef void (QObject::*om1_t64)(const QString&);
    typedef void (Chintz_base::*m1_t65)(const QString&);
    typedef void (QObject::*om1_t65)(const QString&);
    typedef void (Chintz_base::*m1_t66)(int);
    typedef void (QObject::*om1_t66)(int);
    typedef void (Chintz_base::*m1_t67)(int);
    typedef void (QObject::*om1_t67)(int);
    typedef void (Chintz_base::*m1_t68)(int);
    typedef void (QObject::*om1_t68)(int);
    typedef void (Chintz_base::*m1_t69)(int);
    typedef void (QObject::*om1_t69)(int);
    typedef void (Chintz_base::*m1_t70)(int);
    typedef void (QObject::*om1_t70)(int);
    typedef void (Chintz_base::*m1_t71)(int);
    typedef void (QObject::*om1_t71)(int);
    typedef void (Chintz_base::*m1_t72)(int);
    typedef void (QObject::*om1_t72)(int);
    typedef void (Chintz_base::*m1_t73)(int);
    typedef void (QObject::*om1_t73)(int);
    typedef void (Chintz_base::*m1_t74)(int);
    typedef void (QObject::*om1_t74)(int);
    typedef void (Chintz_base::*m1_t75)(bool);
    typedef void (QObject::*om1_t75)(bool);
    typedef void (Chintz_base::*m1_t76)(const QString&);
    typedef void (QObject::*om1_t76)(const QString&);
    typedef void (Chintz_base::*m1_t77)(const QString&);
    typedef void (QObject::*om1_t77)(const QString&);
    typedef void (Chintz_base::*m1_t78)(const QString&);
    typedef void (QObject::*om1_t78)(const QString&);
    typedef void (Chintz_base::*m1_t79)(const QString&);
    typedef void (QObject::*om1_t79)(const QString&);
    typedef void (Chintz_base::*m1_t80)(const QString&);
    typedef void (QObject::*om1_t80)(const QString&);
    typedef void (Chintz_base::*m1_t81)(const QString&);
    typedef void (QObject::*om1_t81)(const QString&);
    typedef void (Chintz_base::*m1_t82)(const QString&);
    typedef void (QObject::*om1_t82)(const QString&);
    typedef void (Chintz_base::*m1_t83)(bool);
    typedef void (QObject::*om1_t83)(bool);
    typedef void (Chintz_base::*m1_t84)(const QString&);
    typedef void (QObject::*om1_t84)(const QString&);
    typedef void (Chintz_base::*m1_t85)(const QString&);
    typedef void (QObject::*om1_t85)(const QString&);
    typedef void (Chintz_base::*m1_t86)(const QString&);
    typedef void (QObject::*om1_t86)(const QString&);
    typedef void (Chintz_base::*m1_t87)(const QString&);
    typedef void (QObject::*om1_t87)(const QString&);
    typedef void (Chintz_base::*m1_t88)(const QString&);
    typedef void (QObject::*om1_t88)(const QString&);
    typedef void (Chintz_base::*m1_t89)(bool);
    typedef void (QObject::*om1_t89)(bool);
    typedef void (Chintz_base::*m1_t90)(const QString&);
    typedef void (QObject::*om1_t90)(const QString&);
    typedef void (Chintz_base::*m1_t91)(const QString&);
    typedef void (QObject::*om1_t91)(const QString&);
    typedef void (Chintz_base::*m1_t92)(const QString&);
    typedef void (QObject::*om1_t92)(const QString&);
    typedef void (Chintz_base::*m1_t93)(const QString&);
    typedef void (QObject::*om1_t93)(const QString&);
    typedef void (Chintz_base::*m1_t94)(const QString&);
    typedef void (QObject::*om1_t94)(const QString&);
    typedef void (Chintz_base::*m1_t95)(const QString&);
    typedef void (QObject::*om1_t95)(const QString&);
    typedef void (Chintz_base::*m1_t96)(const QString&);
    typedef void (QObject::*om1_t96)(const QString&);
    typedef void (Chintz_base::*m1_t97)(const QString&);
    typedef void (QObject::*om1_t97)(const QString&);
    typedef void (Chintz_base::*m1_t98)(const QString&);
    typedef void (QObject::*om1_t98)(const QString&);
    typedef void (Chintz_base::*m1_t99)(const QString&);
    typedef void (QObject::*om1_t99)(const QString&);
    typedef void (Chintz_base::*m1_t100)(const QString&);
    typedef void (QObject::*om1_t100)(const QString&);
    typedef void (Chintz_base::*m1_t101)(bool);
    typedef void (QObject::*om1_t101)(bool);
    typedef void (Chintz_base::*m1_t102)(const QString&);
    typedef void (QObject::*om1_t102)(const QString&);
    typedef void (Chintz_base::*m1_t103)(const QString&);
    typedef void (QObject::*om1_t103)(const QString&);
    typedef void (Chintz_base::*m1_t104)(const QString&);
    typedef void (QObject::*om1_t104)(const QString&);
    typedef void (Chintz_base::*m1_t105)(const QString&);
    typedef void (QObject::*om1_t105)(const QString&);
    typedef void (Chintz_base::*m1_t106)(const QString&);
    typedef void (QObject::*om1_t106)(const QString&);
    typedef void (Chintz_base::*m1_t107)(const QString&);
    typedef void (QObject::*om1_t107)(const QString&);
    typedef void (Chintz_base::*m1_t108)(const QString&);
    typedef void (QObject::*om1_t108)(const QString&);
    typedef void (Chintz_base::*m1_t109)(const QString&);
    typedef void (QObject::*om1_t109)(const QString&);
    typedef void (Chintz_base::*m1_t110)(const QString&);
    typedef void (QObject::*om1_t110)(const QString&);
    typedef void (Chintz_base::*m1_t111)(int);
    typedef void (QObject::*om1_t111)(int);
    typedef void (Chintz_base::*m1_t112)(int);
    typedef void (QObject::*om1_t112)(int);
    typedef void (Chintz_base::*m1_t113)(const QString&);
    typedef void (QObject::*om1_t113)(const QString&);
    typedef void (Chintz_base::*m1_t114)(const QString&);
    typedef void (QObject::*om1_t114)(const QString&);
    typedef void (Chintz_base::*m1_t115)(const QString&);
    typedef void (QObject::*om1_t115)(const QString&);
    typedef void (Chintz_base::*m1_t116)(const QString&);
    typedef void (QObject::*om1_t116)(const QString&);
    typedef void (Chintz_base::*m1_t117)(const QString&);
    typedef void (QObject::*om1_t117)(const QString&);
    typedef void (Chintz_base::*m1_t118)(const QString&);
    typedef void (QObject::*om1_t118)(const QString&);
    typedef void (Chintz_base::*m1_t119)(const QString&);
    typedef void (QObject::*om1_t119)(const QString&);
    typedef void (Chintz_base::*m1_t120)(const QString&);
    typedef void (QObject::*om1_t120)(const QString&);
    typedef void (Chintz_base::*m1_t121)(const QString&);
    typedef void (QObject::*om1_t121)(const QString&);
    typedef void (Chintz_base::*m1_t122)(const QString&);
    typedef void (QObject::*om1_t122)(const QString&);
    typedef void (Chintz_base::*m1_t123)(const QString&);
    typedef void (QObject::*om1_t123)(const QString&);
    typedef void (Chintz_base::*m1_t124)(const QString&);
    typedef void (QObject::*om1_t124)(const QString&);
    typedef void (Chintz_base::*m1_t125)(int);
    typedef void (QObject::*om1_t125)(int);
    typedef void (Chintz_base::*m1_t126)(bool);
    typedef void (QObject::*om1_t126)(bool);
    typedef void (Chintz_base::*m1_t127)(const QString&);
    typedef void (QObject::*om1_t127)(const QString&);
    typedef void (Chintz_base::*m1_t128)(const QString&);
    typedef void (QObject::*om1_t128)(const QString&);
    typedef void (Chintz_base::*m1_t129)(const QString&);
    typedef void (QObject::*om1_t129)(const QString&);
    typedef void (Chintz_base::*m1_t130)(const QString&);
    typedef void (QObject::*om1_t130)(const QString&);
    typedef void (Chintz_base::*m1_t131)(const QString&);
    typedef void (QObject::*om1_t131)(const QString&);
    typedef void (Chintz_base::*m1_t132)(const QString&);
    typedef void (QObject::*om1_t132)(const QString&);
    typedef void (Chintz_base::*m1_t133)(bool);
    typedef void (QObject::*om1_t133)(bool);
    typedef void (Chintz_base::*m1_t134)(bool);
    typedef void (QObject::*om1_t134)(bool);
    typedef void (Chintz_base::*m1_t135)(const QString&);
    typedef void (QObject::*om1_t135)(const QString&);
    typedef void (Chintz_base::*m1_t136)(const QString&);
    typedef void (QObject::*om1_t136)(const QString&);
    typedef void (Chintz_base::*m1_t137)(const QString&);
    typedef void (QObject::*om1_t137)(const QString&);
    typedef void (Chintz_base::*m1_t138)(const QString&);
    typedef void (QObject::*om1_t138)(const QString&);
    typedef void (Chintz_base::*m1_t139)(int);
    typedef void (QObject::*om1_t139)(int);
    typedef void (Chintz_base::*m1_t140)(bool);
    typedef void (QObject::*om1_t140)(bool);
    typedef void (Chintz_base::*m1_t141)(const QString&);
    typedef void (QObject::*om1_t141)(const QString&);
    typedef void (Chintz_base::*m1_t142)(int);
    typedef void (QObject::*om1_t142)(int);
    typedef void (Chintz_base::*m1_t143)(bool);
    typedef void (QObject::*om1_t143)(bool);
    typedef void (Chintz_base::*m1_t144)(bool);
    typedef void (QObject::*om1_t144)(bool);
    typedef void (Chintz_base::*m1_t145)(const QString&);
    typedef void (QObject::*om1_t145)(const QString&);
    typedef void (Chintz_base::*m1_t146)(const QString&);
    typedef void (QObject::*om1_t146)(const QString&);
    typedef void (Chintz_base::*m1_t147)(const QString&);
    typedef void (QObject::*om1_t147)(const QString&);
    typedef void (Chintz_base::*m1_t148)(const QString&);
    typedef void (QObject::*om1_t148)(const QString&);
    typedef void (Chintz_base::*m1_t149)(const QString&);
    typedef void (QObject::*om1_t149)(const QString&);
    typedef void (Chintz_base::*m1_t150)(const QString&);
    typedef void (QObject::*om1_t150)(const QString&);
    typedef void (Chintz_base::*m1_t151)(const QString&);
    typedef void (QObject::*om1_t151)(const QString&);
    typedef void (Chintz_base::*m1_t152)(const QString&);
    typedef void (QObject::*om1_t152)(const QString&);
    typedef void (Chintz_base::*m1_t153)(const QString&);
    typedef void (QObject::*om1_t153)(const QString&);
    typedef void (Chintz_base::*m1_t154)(const QString&);
    typedef void (QObject::*om1_t154)(const QString&);
    typedef void (Chintz_base::*m1_t155)(const QString&);
    typedef void (QObject::*om1_t155)(const QString&);
    typedef void (Chintz_base::*m1_t156)(const QString&);
    typedef void (QObject::*om1_t156)(const QString&);
    typedef void (Chintz_base::*m1_t157)(const QString&);
    typedef void (QObject::*om1_t157)(const QString&);
    typedef void (Chintz_base::*m1_t158)(const QString&);
    typedef void (QObject::*om1_t158)(const QString&);
    typedef void (Chintz_base::*m1_t159)(const QString&);
    typedef void (QObject::*om1_t159)(const QString&);
    typedef void (Chintz_base::*m1_t160)(const QString&);
    typedef void (QObject::*om1_t160)(const QString&);
    typedef void (Chintz_base::*m1_t161)(const QString&);
    typedef void (QObject::*om1_t161)(const QString&);
    typedef void (Chintz_base::*m1_t162)(const QString&);
    typedef void (QObject::*om1_t162)(const QString&);
    typedef void (Chintz_base::*m1_t163)(const QString&);
    typedef void (QObject::*om1_t163)(const QString&);
    typedef void (Chintz_base::*m1_t164)(const QString&);
    typedef void (QObject::*om1_t164)(const QString&);
    typedef void (Chintz_base::*m1_t165)(const QString&);
    typedef void (QObject::*om1_t165)(const QString&);
    typedef void (Chintz_base::*m1_t166)(const QString&);
    typedef void (QObject::*om1_t166)(const QString&);
    typedef void (Chintz_base::*m1_t167)(const QString&);
    typedef void (QObject::*om1_t167)(const QString&);
    typedef void (Chintz_base::*m1_t168)(const QString&);
    typedef void (QObject::*om1_t168)(const QString&);
    m1_t0 v1_0 = &Chintz_base::Close;
    om1_t0 ov1_0 = (om1_t0)v1_0;
    m1_t1 v1_1 = &Chintz_base::Clear;
    om1_t1 ov1_1 = (om1_t1)v1_1;
    m1_t2 v1_2 = &Chintz_base::Blank;
    om1_t2 ov1_2 = (om1_t2)v1_2;
    m1_t3 v1_3 = &Chintz_base::altered;
    om1_t3 ov1_3 = (om1_t3)v1_3;
    m1_t4 v1_4 = &Chintz_base::WriteTheOutput;
    om1_t4 ov1_4 = (om1_t4)v1_4;
    m1_t5 v1_5 = &Chintz_base::OpenChildControlFile;
    om1_t5 ov1_5 = (om1_t5)v1_5;
    m1_t6 v1_6 = &Chintz_base::ChildFileSelect;
    om1_t6 ov1_6 = (om1_t6)v1_6;
    m1_t7 v1_7 = &Chintz_base::ReadChildControlFile;
    om1_t7 ov1_7 = (om1_t7)v1_7;
    m1_t8 v1_8 = &Chintz_base::SaveAs;
    om1_t8 ov1_8 = (om1_t8)v1_8;
    m1_t9 v1_9 = &Chintz_base::About;
    om1_t9 ov1_9 = (om1_t9)v1_9;
    m1_t10 v1_10 = &Chintz_base::Help;
    om1_t10 ov1_10 = (om1_t10)v1_10;
    m1_t11 v1_11 = &Chintz_base::control;
    om1_t11 ov1_11 = (om1_t11)v1_11;
    m1_t12 v1_12 = &Chintz_base::WriteChildControlFile;
    om1_t12 ov1_12 = (om1_t12)v1_12;
    m1_t13 v1_13 = &Chintz_base::set_CONTROLFILENAME;
    om1_t13 ov1_13 = (om1_t13)v1_13;
    m1_t14 v1_14 = &Chintz_base::RadioButton5OUTLETBOX_switch;
    om1_t14 ov1_14 = (om1_t14)v1_14;
    m1_t15 v1_15 = &Chintz_base::set_TYP_BOUND;
    om1_t15 ov1_15 = (om1_t15)v1_15;
    m1_t16 v1_16 = &Chintz_base::RadioButton8rando_switch;
    om1_t16 ov1_16 = (om1_t16)v1_16;
    m1_t17 v1_17 = &Chintz_base::set_OPT_PT_PLACE;
    om1_t17 ov1_17 = (om1_t17)v1_17;
    m1_t18 v1_18 = &Chintz_base::set_X_GRID_SIZE;
    om1_t18 ov1_18 = (om1_t18)v1_18;
    m1_t19 v1_19 = &Chintz_base::set_Y_GRID_SIZE;
    om1_t19 ov1_19 = (om1_t19)v1_19;
    m1_t20 v1_20 = &Chintz_base::set_GRID_SPACING;
    om1_t20 ov1_20 = (om1_t20)v1_20;
    m1_t21 v1_21 = &Chintz_base::set_NUM_PTS;
    om1_t21 ov1_21 = (om1_t21)v1_21;
    m1_t22 v1_22 = &Chintz_base::set_OUTLET_X_COORD;
    om1_t22 ov1_22 = (om1_t22)v1_22;
    m1_t23 v1_23 = &Chintz_base::set_OUTLET_Y_COORD;
    om1_t23 ov1_23 = (om1_t23)v1_23;
    m1_t24 v1_24 = &Chintz_base::set_SLOPED_SURF;
    om1_t24 ov1_24 = (om1_t24)v1_24;
    m1_t25 v1_25 = &Chintz_base::set_UPPER_BOUND_Z;
    om1_t25 ov1_25 = (om1_t25)v1_25;
    m1_t26 v1_26 = &Chintz_base::set_MEAN_ELEV;
    om1_t26 ov1_26 = (om1_t26)v1_26;
    m1_t27 v1_27 = &Chintz_base::RadioButton9Meshset_switch;
    om1_t27 ov1_27 = (om1_t27)v1_27;
    m1_t28 v1_28 = &Chintz_base::RadioButton01TINfiles_switch;
    om1_t28 ov1_28 = (om1_t28)v1_28;
    m1_t29 v1_29 = &Chintz_base::RadioButton11POfile_switch;
    om1_t29 ov1_29 = (om1_t29)v1_29;
    m1_t30 v1_30 = &Chintz_base::RadioButton21ARCfile_switch;
    om1_t30 ov1_30 = (om1_t30)v1_30;
    m1_t31 v1_31 = &Chintz_base::set_OPTREADINPUT;
    om1_t31 ov1_31 = (om1_t31)v1_31;
    m1_t32 v1_32 = &Chintz_base::INPUTDATAFILELineFileSelect;
    om1_t32 ov1_32 = (om1_t32)v1_32;
    m1_t33 v1_33 = &Chintz_base::set_INPUTDATAFILE;
    om1_t33 ov1_33 = (om1_t33)v1_33;
    m1_t34 v1_34 = &Chintz_base::set_INPUTTIME;
    om1_t34 ov1_34 = (om1_t34)v1_34;
    m1_t35 v1_35 = &Chintz_base::OUTFILENAMELineFileSelect;
    om1_t35 ov1_35 = (om1_t35)v1_35;
    m1_t36 v1_36 = &Chintz_base::set_OUTFILENAME;
    om1_t36 ov1_36 = (om1_t36)v1_36;
    m1_t37 v1_37 = &Chintz_base::POINTFILENAMELineFileSelect;
    om1_t37 ov1_37 = (om1_t37)v1_37;
    m1_t38 v1_38 = &Chintz_base::set_POINTFILENAME;
    om1_t38 ov1_38 = (om1_t38)v1_38;
    m1_t39 v1_39 = &Chintz_base::ARCGRIDFILENAMELineFileSelect;
    om1_t39 ov1_39 = (om1_t39)v1_39;
    m1_t40 v1_40 = &Chintz_base::set_ARCGRIDFILENAME;
    om1_t40 ov1_40 = (om1_t40)v1_40;
    m1_t41 v1_41 = &Chintz_base::set_RUNTIME;
    om1_t41 ov1_41 = (om1_t41)v1_41;
    m1_t42 v1_42 = &Chintz_base::set_OPINTRVL;
    om1_t42 ov1_42 = (om1_t42)v1_42;
    m1_t43 v1_43 = &Chintz_base::OPTSINVARChkBxSinus_switch;
    om1_t43 ov1_43 = (om1_t43)v1_43;
    m1_t44 v1_44 = &Chintz_base::set_OPTSINVAR;
    om1_t44 ov1_44 = (om1_t44)v1_44;
    m1_t45 v1_45 = &Chintz_base::OPTVARChkBxstorm_switch;
    om1_t45 ov1_45 = (om1_t45)v1_45;
    m1_t46 v1_46 = &Chintz_base::set_OPTVAR;
    om1_t46 ov1_46 = (om1_t46)v1_46;
    m1_t47 v1_47 = &Chintz_base::set_SEED;
    om1_t47 ov1_47 = (om1_t47)v1_47;
    m1_t48 v1_48 = &Chintz_base::set_PMEAN;
    om1_t48 ov1_48 = (om1_t48)v1_48;
    m1_t49 v1_49 = &Chintz_base::set_STDUR;
    om1_t49 ov1_49 = (om1_t49)v1_49;
    m1_t50 v1_50 = &Chintz_base::set_ISTDUR;
    om1_t50 ov1_50 = (om1_t50)v1_50;
    m1_t51 v1_51 = &Chintz_base::set_PERIOD;
    om1_t51 ov1_51 = (om1_t51)v1_51;
    m1_t52 v1_52 = &Chintz_base::set_MAXPMEAN;
    om1_t52 ov1_52 = (om1_t52)v1_52;
    m1_t53 v1_53 = &Chintz_base::set_MAXSTDURNM;
    om1_t53 ov1_53 = (om1_t53)v1_53;
    m1_t54 v1_54 = &Chintz_base::set_MAXISTDURMN;
    om1_t54 ov1_54 = (om1_t54)v1_54;
    m1_t55 v1_55 = &Chintz_base::set_LAKEFILL;
    om1_t55 ov1_55 = (om1_t55)v1_55;
    m1_t56 v1_56 = &Chintz_base::set_INFILTRATION;
    om1_t56 ov1_56 = (om1_t56)v1_56;
    m1_t57 v1_57 = &Chintz_base::set_SOIL_STORE;
    om1_t57 ov1_57 = (om1_t57)v1_57;
    m1_t58 v1_58 = &Chintz_base::set_TRANSMISSIVITY;
    om1_t58 ov1_58 = (om1_t58)v1_58;
    m1_t59 v1_59 = &Chintz_base::set_KINWAVE_HQEXP;
    om1_t59 ov1_59 = (om1_t59)v1_59;
    m1_t60 v1_60 = &Chintz_base::set_FLOWVELOCITY;
    om1_t60 ov1_60 = (om1_t60)v1_60;
    m1_t61 v1_61 = &Chintz_base::set_HYDROSHAPEFAC;
    om1_t61 ov1_61 = (om1_t61)v1_61;
    m1_t62 v1_62 = &Chintz_base::OPTSINVARINFILTChkBxsinv_switch;
    om1_t62 ov1_62 = (om1_t62)v1_62;
    m1_t63 v1_63 = &Chintz_base::set_OPTSINVARINFILT;
    om1_t63 ov1_63 = (om1_t63)v1_63;
    m1_t64 v1_64 = &Chintz_base::set_PERIOD_INFILT;
    om1_t64 ov1_64 = (om1_t64)v1_64;
    m1_t65 v1_65 = &Chintz_base::set_MAXICMEAN;
    om1_t65 ov1_65 = (om1_t65)v1_65;
    m1_t66 v1_66 = &Chintz_base::RadioButton31sinvar_switch;
    om1_t66 ov1_66 = (om1_t66)v1_66;
    m1_t67 v1_67 = &Chintz_base::RadioButton31icap_switch;
    om1_t67 ov1_67 = (om1_t67)v1_67;
    m1_t68 v1_68 = &Chintz_base::RadioButton41trans_switch;
    om1_t68 ov1_68 = (om1_t68)v1_68;
    m1_t69 v1_69 = &Chintz_base::RadioButton51sws_switch;
    om1_t69 ov1_69 = (om1_t69)v1_69;
    m1_t70 v1_70 = &Chintz_base::RadioButton51icap_switch;
    om1_t70 ov1_70 = (om1_t70)v1_70;
    m1_t71 v1_71 = &Chintz_base::RadioButton61kin_switch;
    om1_t71 ov1_71 = (om1_t71)v1_71;
    m1_t72 v1_72 = &Chintz_base::RadioButton71hydro_switch;
    om1_t72 ov1_72 = (om1_t72)v1_72;
    m1_t73 v1_73 = &Chintz_base::set_FLOWGEN;
    om1_t73 ov1_73 = (om1_t73)v1_73;
    m1_t74 v1_74 = &Chintz_base::OPTINLETChkBxInflow_switch;
    om1_t74 ov1_74 = (om1_t74)v1_74;
    m1_t75 v1_75 = &Chintz_base::set_OPTINLET;
    om1_t75 ov1_75 = (om1_t75)v1_75;
    m1_t76 v1_76 = &Chintz_base::set_INLET_X;
    om1_t76 ov1_76 = (om1_t76)v1_76;
    m1_t77 v1_77 = &Chintz_base::set_INLET_Y;
    om1_t77 ov1_77 = (om1_t77)v1_77;
    m1_t78 v1_78 = &Chintz_base::set_INDRAREA;
    om1_t78 ov1_78 = (om1_t78)v1_78;
    m1_t79 v1_79 = &Chintz_base::set_INSEDLOAD1;
    om1_t79 ov1_79 = (om1_t79)v1_79;
    m1_t80 v1_80 = &Chintz_base::set_INSEDLOAD2;
    om1_t80 ov1_80 = (om1_t80)v1_80;
    m1_t81 v1_81 = &Chintz_base::set_INSEDLOAD3;
    om1_t81 ov1_81 = (om1_t81)v1_81;
    m1_t82 v1_82 = &Chintz_base::set_MAXREGDEPTH;
    om1_t82 ov1_82 = (om1_t82)v1_82;
    m1_t83 v1_83 = &Chintz_base::set_OPTDETACHLIM;
    om1_t83 ov1_83 = (om1_t83)v1_83;
    m1_t84 v1_84 = &Chintz_base::set_KF;
    om1_t84 ov1_84 = (om1_t84)v1_84;
    m1_t85 v1_85 = &Chintz_base::set_MF;
    om1_t85 ov1_85 = (om1_t85)v1_85;
    m1_t86 v1_86 = &Chintz_base::set_NF;
    om1_t86 ov1_86 = (om1_t86)v1_86;
    m1_t87 v1_87 = &Chintz_base::set_TAUCD;
    om1_t87 ov1_87 = (om1_t87)v1_87;
    m1_t88 v1_88 = &Chintz_base::set_PB;
    om1_t88 ov1_88 = (om1_t88)v1_88;
    m1_t89 v1_89 = &Chintz_base::set_OPTDIFFDEP;
    om1_t89 ov1_89 = (om1_t89)v1_89;
    m1_t90 v1_90 = &Chintz_base::set_KD;
    om1_t90 ov1_90 = (om1_t90)v1_90;
    m1_t91 v1_91 = &Chintz_base::set_NUMGRNSIZE;
    om1_t91 ov1_91 = (om1_t91)v1_91;
    m1_t92 v1_92 = &Chintz_base::set_GRAINDIAM1;
    om1_t92 ov1_92 = (om1_t92)v1_92;
    m1_t93 v1_93 = &Chintz_base::set_GRAINDIAM2;
    om1_t93 ov1_93 = (om1_t93)v1_93;
    m1_t94 v1_94 = &Chintz_base::set_GRAINDIAM3;
    om1_t94 ov1_94 = (om1_t94)v1_94;
    m1_t95 v1_95 = &Chintz_base::set_REGPROPORTION1;
    om1_t95 ov1_95 = (om1_t95)v1_95;
    m1_t96 v1_96 = &Chintz_base::set_REGPROPORTION2;
    om1_t96 ov1_96 = (om1_t96)v1_96;
    m1_t97 v1_97 = &Chintz_base::set_REGPROPORTION3;
    om1_t97 ov1_97 = (om1_t97)v1_97;
    m1_t98 v1_98 = &Chintz_base::set_BRPROPORTION1;
    om1_t98 ov1_98 = (om1_t98)v1_98;
    m1_t99 v1_99 = &Chintz_base::set_BRPROPORTION2;
    om1_t99 ov1_99 = (om1_t99)v1_99;
    m1_t100 v1_100 = &Chintz_base::set_BRPROPORTION3;
    om1_t100 ov1_100 = (om1_t100)v1_100;
    m1_t101 v1_101 = &Chintz_base::set_OPTREADLAYER;
    om1_t101 ov1_101 = (om1_t101)v1_101;
    m1_t102 v1_102 = &Chintz_base::set_KR;
    om1_t102 ov1_102 = (om1_t102)v1_102;
    m1_t103 v1_103 = &Chintz_base::set_REGINIT;
    om1_t103 ov1_103 = (om1_t103)v1_103;
    m1_t104 v1_104 = &Chintz_base::set_KB;
    om1_t104 ov1_104 = (om1_t104)v1_104;
    m1_t105 v1_105 = &Chintz_base::set_MB;
    om1_t105 ov1_105 = (om1_t105)v1_105;
    m1_t106 v1_106 = &Chintz_base::set_NB;
    om1_t106 ov1_106 = (om1_t106)v1_106;
    m1_t107 v1_107 = &Chintz_base::set_BEDROCKDEPTH;
    om1_t107 ov1_107 = (om1_t107)v1_107;
    m1_t108 v1_108 = &Chintz_base::set_FAULTPOS;
    om1_t108 ov1_108 = (om1_t108)v1_108;
    m1_t109 v1_109 = &Chintz_base::set_UPDUR;
    om1_t109 ov1_109 = (om1_t109)v1_109;
    m1_t110 v1_110 = &Chintz_base::set_UPRATE;
    om1_t110 ov1_110 = (om1_t110)v1_110;
    m1_t111 v1_111 = &Chintz_base::RadioButton81Upsy_switch;
    om1_t111 ov1_111 = (om1_t111)v1_111;
    m1_t112 v1_112 = &Chintz_base::set_UPTYPE;
    om1_t112 ov1_112 = (om1_t112)v1_112;
    m1_t113 v1_113 = &Chintz_base::set_BANKFULLEVENT;
    om1_t113 ov1_113 = (om1_t113)v1_113;
    m1_t114 v1_114 = &Chintz_base::set_HYDR_WID_COEFF_DS;
    om1_t114 ov1_114 = (om1_t114)v1_114;
    m1_t115 v1_115 = &Chintz_base::set_HYDR_WID_EXP_DS;
    om1_t115 ov1_115 = (om1_t115)v1_115;
    m1_t116 v1_116 = &Chintz_base::set_HYDR_WID_EXP_STN;
    om1_t116 ov1_116 = (om1_t116)v1_116;
    m1_t117 v1_117 = &Chintz_base::set_HYDR_DEP_COEFF_DS;
    om1_t117 ov1_117 = (om1_t117)v1_117;
    m1_t118 v1_118 = &Chintz_base::set_HYDR_DEP_EXP_DS;
    om1_t118 ov1_118 = (om1_t118)v1_118;
    m1_t119 v1_119 = &Chintz_base::set_HYDR_DEP_EXP_STN;
    om1_t119 ov1_119 = (om1_t119)v1_119;
    m1_t120 v1_120 = &Chintz_base::set_HYDR_ROUGH_COEFF_DS;
    om1_t120 ov1_120 = (om1_t120)v1_120;
    m1_t121 v1_121 = &Chintz_base::set_HYDR_ROUGH_EXP_DS;
    om1_t121 ov1_121 = (om1_t121)v1_121;
    m1_t122 v1_122 = &Chintz_base::set_HYDR_ROUGH_EXP_STN;
    om1_t122 ov1_122 = (om1_t122)v1_122;
    m1_t123 v1_123 = &Chintz_base::set_BANK_ROUGH_COEFF;
    om1_t123 ov1_123 = (om1_t123)v1_123;
    m1_t124 v1_124 = &Chintz_base::set_BANK_ROUGH_EXP;
    om1_t124 ov1_124 = (om1_t124)v1_124;
    m1_t125 v1_125 = &Chintz_base::OPTMNDRChkBxmndr_switch;
    om1_t125 ov1_125 = (om1_t125)v1_125;
    m1_t126 v1_126 = &Chintz_base::set_OPTMNDR;
    om1_t126 ov1_126 = (om1_t126)v1_126;
    m1_t127 v1_127 = &Chintz_base::set_CRITICAL_FLOW;
    om1_t127 ov1_127 = (om1_t127)v1_127;
    m1_t128 v1_128 = &Chintz_base::set_DEF_CHAN_DISCR;
    om1_t128 ov1_128 = (om1_t128)v1_128;
    m1_t129 v1_129 = &Chintz_base::set_FRAC_WID_MOVE;
    om1_t129 ov1_129 = (om1_t129)v1_129;
    m1_t130 v1_130 = &Chintz_base::set_FRAC_WID_ADD;
    om1_t130 ov1_130 = (om1_t130)v1_130;
    m1_t131 v1_131 = &Chintz_base::set_VEG_ERODY;
    om1_t131 ov1_131 = (om1_t131)v1_131;
    m1_t132 v1_132 = &Chintz_base::set_LATADJUST;
    om1_t132 ov1_132 = (om1_t132)v1_132;
    m1_t133 v1_133 = &Chintz_base::set_BNKHTDEP;
    om1_t133 ov1_133 = (om1_t133)v1_133;
    m1_t134 v1_134 = &Chintz_base::set_OPTINTERPLAYER;
    om1_t134 ov1_134 = (om1_t134)v1_134;
    m1_t135 v1_135 = &Chintz_base::set_FP_MU;
    om1_t135 ov1_135 = (om1_t135)v1_135;
    m1_t136 v1_136 = &Chintz_base::set_FP_LAMBDA;
    om1_t136 ov1_136 = (om1_t136)v1_136;
    m1_t137 v1_137 = &Chintz_base::set_PF_DRAREAMIN;
    om1_t137 ov1_137 = (om1_t137)v1_137;
    m1_t138 v1_138 = &Chintz_base::set_FP_BANKFULLEVENT;
    om1_t138 ov1_138 = (om1_t138)v1_138;
    m1_t139 v1_139 = &Chintz_base::OPTFLOODPLAINChkBxovdep_switch;
    om1_t139 ov1_139 = (om1_t139)v1_139;
    m1_t140 v1_140 = &Chintz_base::set_OPTFLOODPLAIN;
    om1_t140 ov1_140 = (om1_t140)v1_140;
    m1_t141 v1_141 = &Chintz_base::set_LOESS_DEP_RATE;
    om1_t141 ov1_141 = (om1_t141)v1_141;
    m1_t142 v1_142 = &Chintz_base::OPTLOESSDEPChkBxeodep_switch;
    om1_t142 ov1_142 = (om1_t142)v1_142;
    m1_t143 v1_143 = &Chintz_base::set_OPTLOESSDEP;
    om1_t143 ov1_143 = (om1_t143)v1_143;
    m1_t144 v1_144 = &Chintz_base::set_OPTEXPOSURETIME;
    om1_t144 ov1_144 = (om1_t144)v1_144;
    m1_t145 v1_145 = &Chintz_base::set_BiLine_a1var;
    om1_t145 ov1_145 = (om1_t145)v1_145;
    m1_t146 v1_146 = &Chintz_base::set_BiLine_b1var;
    om1_t146 ov1_146 = (om1_t146)v1_146;
    m1_t147 v1_147 = &Chintz_base::set_BiLine_a2var;
    om1_t147 ov1_147 = (om1_t147)v1_147;
    m1_t148 v1_148 = &Chintz_base::set_BiLine_b2var;
    om1_t148 ov1_148 = (om1_t148)v1_148;
    m1_t149 v1_149 = &Chintz_base::set_BiLine_a3var;
    om1_t149 ov1_149 = (om1_t149)v1_149;
    m1_t150 v1_150 = &Chintz_base::set_BiLine_b3var;
    om1_t150 ov1_150 = (om1_t150)v1_150;
    m1_t151 v1_151 = &Chintz_base::set_BiLine_a4var;
    om1_t151 ov1_151 = (om1_t151)v1_151;
    m1_t152 v1_152 = &Chintz_base::set_BiLine_b4var;
    om1_t152 ov1_152 = (om1_t152)v1_152;
    m1_t153 v1_153 = &Chintz_base::set_BiLine_a5var;
    om1_t153 ov1_153 = (om1_t153)v1_153;
    m1_t154 v1_154 = &Chintz_base::set_BiLine_b5var;
    om1_t154 ov1_154 = (om1_t154)v1_154;
    m1_t155 v1_155 = &Chintz_base::set_BiLine_a6var;
    om1_t155 ov1_155 = (om1_t155)v1_155;
    m1_t156 v1_156 = &Chintz_base::set_BiLine_b6var;
    om1_t156 ov1_156 = (om1_t156)v1_156;
    m1_t157 v1_157 = &Chintz_base::set_BiLine_a7var;
    om1_t157 ov1_157 = (om1_t157)v1_157;
    m1_t158 v1_158 = &Chintz_base::set_BiLine_b7var;
    om1_t158 ov1_158 = (om1_t158)v1_158;
    m1_t159 v1_159 = &Chintz_base::set_BiLine_a8var;
    om1_t159 ov1_159 = (om1_t159)v1_159;
    m1_t160 v1_160 = &Chintz_base::set_BiLine_b8var;
    om1_t160 ov1_160 = (om1_t160)v1_160;
    m1_t161 v1_161 = &Chintz_base::set_BiLine_a9var;
    om1_t161 ov1_161 = (om1_t161)v1_161;
    m1_t162 v1_162 = &Chintz_base::set_BiLine_b9var;
    om1_t162 ov1_162 = (om1_t162)v1_162;
    m1_t163 v1_163 = &Chintz_base::set_BiLine_a01var;
    om1_t163 ov1_163 = (om1_t163)v1_163;
    m1_t164 v1_164 = &Chintz_base::set_BiLine_b01var;
    om1_t164 ov1_164 = (om1_t164)v1_164;
    m1_t165 v1_165 = &Chintz_base::set_BiLine_a11var;
    om1_t165 ov1_165 = (om1_t165)v1_165;
    m1_t166 v1_166 = &Chintz_base::set_BiLine_b11var;
    om1_t166 ov1_166 = (om1_t166)v1_166;
    m1_t167 v1_167 = &Chintz_base::set_BiLine_a21var;
    om1_t167 ov1_167 = (om1_t167)v1_167;
    m1_t168 v1_168 = &Chintz_base::set_BiLine_b21var;
    om1_t168 ov1_168 = (om1_t168)v1_168;
    QMetaData *slot_tbl = QMetaObject::new_metadata(169);
    QMetaData::Access *slot_tbl_access = QMetaObject::new_metaaccess(169);
    slot_tbl[0].name = "Close()";
    slot_tbl[0].ptr = (QMember)ov1_0;
    slot_tbl_access[0] = QMetaData::Public;
    slot_tbl[1].name = "Clear()";
    slot_tbl[1].ptr = (QMember)ov1_1;
    slot_tbl_access[1] = QMetaData::Public;
    slot_tbl[2].name = "Blank()";
    slot_tbl[2].ptr = (QMember)ov1_2;
    slot_tbl_access[2] = QMetaData::Public;
    slot_tbl[3].name = "altered()";
    slot_tbl[3].ptr = (QMember)ov1_3;
    slot_tbl_access[3] = QMetaData::Public;
    slot_tbl[4].name = "WriteTheOutput()";
    slot_tbl[4].ptr = (QMember)ov1_4;
    slot_tbl_access[4] = QMetaData::Public;
    slot_tbl[5].name = "OpenChildControlFile()";
    slot_tbl[5].ptr = (QMember)ov1_5;
    slot_tbl_access[5] = QMetaData::Public;
    slot_tbl[6].name = "ChildFileSelect()";
    slot_tbl[6].ptr = (QMember)ov1_6;
    slot_tbl_access[6] = QMetaData::Public;
    slot_tbl[7].name = "ReadChildControlFile(const QString&)";
    slot_tbl[7].ptr = (QMember)ov1_7;
    slot_tbl_access[7] = QMetaData::Public;
    slot_tbl[8].name = "SaveAs()";
    slot_tbl[8].ptr = (QMember)ov1_8;
    slot_tbl_access[8] = QMetaData::Public;
    slot_tbl[9].name = "About()";
    slot_tbl[9].ptr = (QMember)ov1_9;
    slot_tbl_access[9] = QMetaData::Public;
    slot_tbl[10].name = "Help()";
    slot_tbl[10].ptr = (QMember)ov1_10;
    slot_tbl_access[10] = QMetaData::Public;
    slot_tbl[11].name = "control()";
    slot_tbl[11].ptr = (QMember)ov1_11;
    slot_tbl_access[11] = QMetaData::Public;
    slot_tbl[12].name = "WriteChildControlFile(ofstream&)";
    slot_tbl[12].ptr = (QMember)ov1_12;
    slot_tbl_access[12] = QMetaData::Public;
    slot_tbl[13].name = "set_CONTROLFILENAME(const QString&)";
    slot_tbl[13].ptr = (QMember)ov1_13;
    slot_tbl_access[13] = QMetaData::Public;
    slot_tbl[14].name = "RadioButton5OUTLETBOX_switch(int)";
    slot_tbl[14].ptr = (QMember)ov1_14;
    slot_tbl_access[14] = QMetaData::Public;
    slot_tbl[15].name = "set_TYP_BOUND(int)";
    slot_tbl[15].ptr = (QMember)ov1_15;
    slot_tbl_access[15] = QMetaData::Public;
    slot_tbl[16].name = "RadioButton8rando_switch(int)";
    slot_tbl[16].ptr = (QMember)ov1_16;
    slot_tbl_access[16] = QMetaData::Public;
    slot_tbl[17].name = "set_OPT_PT_PLACE(int)";
    slot_tbl[17].ptr = (QMember)ov1_17;
    slot_tbl_access[17] = QMetaData::Public;
    slot_tbl[18].name = "set_X_GRID_SIZE(const QString&)";
    slot_tbl[18].ptr = (QMember)ov1_18;
    slot_tbl_access[18] = QMetaData::Public;
    slot_tbl[19].name = "set_Y_GRID_SIZE(const QString&)";
    slot_tbl[19].ptr = (QMember)ov1_19;
    slot_tbl_access[19] = QMetaData::Public;
    slot_tbl[20].name = "set_GRID_SPACING(const QString&)";
    slot_tbl[20].ptr = (QMember)ov1_20;
    slot_tbl_access[20] = QMetaData::Public;
    slot_tbl[21].name = "set_NUM_PTS(const QString&)";
    slot_tbl[21].ptr = (QMember)ov1_21;
    slot_tbl_access[21] = QMetaData::Public;
    slot_tbl[22].name = "set_OUTLET_X_COORD(const QString&)";
    slot_tbl[22].ptr = (QMember)ov1_22;
    slot_tbl_access[22] = QMetaData::Public;
    slot_tbl[23].name = "set_OUTLET_Y_COORD(const QString&)";
    slot_tbl[23].ptr = (QMember)ov1_23;
    slot_tbl_access[23] = QMetaData::Public;
    slot_tbl[24].name = "set_SLOPED_SURF(bool)";
    slot_tbl[24].ptr = (QMember)ov1_24;
    slot_tbl_access[24] = QMetaData::Public;
    slot_tbl[25].name = "set_UPPER_BOUND_Z(const QString&)";
    slot_tbl[25].ptr = (QMember)ov1_25;
    slot_tbl_access[25] = QMetaData::Public;
    slot_tbl[26].name = "set_MEAN_ELEV(const QString&)";
    slot_tbl[26].ptr = (QMember)ov1_26;
    slot_tbl_access[26] = QMetaData::Public;
    slot_tbl[27].name = "RadioButton9Meshset_switch(int)";
    slot_tbl[27].ptr = (QMember)ov1_27;
    slot_tbl_access[27] = QMetaData::Public;
    slot_tbl[28].name = "RadioButton01TINfiles_switch(int)";
    slot_tbl[28].ptr = (QMember)ov1_28;
    slot_tbl_access[28] = QMetaData::Public;
    slot_tbl[29].name = "RadioButton11POfile_switch(int)";
    slot_tbl[29].ptr = (QMember)ov1_29;
    slot_tbl_access[29] = QMetaData::Public;
    slot_tbl[30].name = "RadioButton21ARCfile_switch(int)";
    slot_tbl[30].ptr = (QMember)ov1_30;
    slot_tbl_access[30] = QMetaData::Public;
    slot_tbl[31].name = "set_OPTREADINPUT(int)";
    slot_tbl[31].ptr = (QMember)ov1_31;
    slot_tbl_access[31] = QMetaData::Public;
    slot_tbl[32].name = "INPUTDATAFILELineFileSelect()";
    slot_tbl[32].ptr = (QMember)ov1_32;
    slot_tbl_access[32] = QMetaData::Public;
    slot_tbl[33].name = "set_INPUTDATAFILE(const QString&)";
    slot_tbl[33].ptr = (QMember)ov1_33;
    slot_tbl_access[33] = QMetaData::Public;
    slot_tbl[34].name = "set_INPUTTIME(const QString&)";
    slot_tbl[34].ptr = (QMember)ov1_34;
    slot_tbl_access[34] = QMetaData::Public;
    slot_tbl[35].name = "OUTFILENAMELineFileSelect()";
    slot_tbl[35].ptr = (QMember)ov1_35;
    slot_tbl_access[35] = QMetaData::Public;
    slot_tbl[36].name = "set_OUTFILENAME(const QString&)";
    slot_tbl[36].ptr = (QMember)ov1_36;
    slot_tbl_access[36] = QMetaData::Public;
    slot_tbl[37].name = "POINTFILENAMELineFileSelect()";
    slot_tbl[37].ptr = (QMember)ov1_37;
    slot_tbl_access[37] = QMetaData::Public;
    slot_tbl[38].name = "set_POINTFILENAME(const QString&)";
    slot_tbl[38].ptr = (QMember)ov1_38;
    slot_tbl_access[38] = QMetaData::Public;
    slot_tbl[39].name = "ARCGRIDFILENAMELineFileSelect()";
    slot_tbl[39].ptr = (QMember)ov1_39;
    slot_tbl_access[39] = QMetaData::Public;
    slot_tbl[40].name = "set_ARCGRIDFILENAME(const QString&)";
    slot_tbl[40].ptr = (QMember)ov1_40;
    slot_tbl_access[40] = QMetaData::Public;
    slot_tbl[41].name = "set_RUNTIME(const QString&)";
    slot_tbl[41].ptr = (QMember)ov1_41;
    slot_tbl_access[41] = QMetaData::Public;
    slot_tbl[42].name = "set_OPINTRVL(const QString&)";
    slot_tbl[42].ptr = (QMember)ov1_42;
    slot_tbl_access[42] = QMetaData::Public;
    slot_tbl[43].name = "OPTSINVARChkBxSinus_switch(int)";
    slot_tbl[43].ptr = (QMember)ov1_43;
    slot_tbl_access[43] = QMetaData::Public;
    slot_tbl[44].name = "set_OPTSINVAR(bool)";
    slot_tbl[44].ptr = (QMember)ov1_44;
    slot_tbl_access[44] = QMetaData::Public;
    slot_tbl[45].name = "OPTVARChkBxstorm_switch(int)";
    slot_tbl[45].ptr = (QMember)ov1_45;
    slot_tbl_access[45] = QMetaData::Public;
    slot_tbl[46].name = "set_OPTVAR(bool)";
    slot_tbl[46].ptr = (QMember)ov1_46;
    slot_tbl_access[46] = QMetaData::Public;
    slot_tbl[47].name = "set_SEED(const QString&)";
    slot_tbl[47].ptr = (QMember)ov1_47;
    slot_tbl_access[47] = QMetaData::Public;
    slot_tbl[48].name = "set_PMEAN(const QString&)";
    slot_tbl[48].ptr = (QMember)ov1_48;
    slot_tbl_access[48] = QMetaData::Public;
    slot_tbl[49].name = "set_STDUR(const QString&)";
    slot_tbl[49].ptr = (QMember)ov1_49;
    slot_tbl_access[49] = QMetaData::Public;
    slot_tbl[50].name = "set_ISTDUR(const QString&)";
    slot_tbl[50].ptr = (QMember)ov1_50;
    slot_tbl_access[50] = QMetaData::Public;
    slot_tbl[51].name = "set_PERIOD(const QString&)";
    slot_tbl[51].ptr = (QMember)ov1_51;
    slot_tbl_access[51] = QMetaData::Public;
    slot_tbl[52].name = "set_MAXPMEAN(const QString&)";
    slot_tbl[52].ptr = (QMember)ov1_52;
    slot_tbl_access[52] = QMetaData::Public;
    slot_tbl[53].name = "set_MAXSTDURNM(const QString&)";
    slot_tbl[53].ptr = (QMember)ov1_53;
    slot_tbl_access[53] = QMetaData::Public;
    slot_tbl[54].name = "set_MAXISTDURMN(const QString&)";
    slot_tbl[54].ptr = (QMember)ov1_54;
    slot_tbl_access[54] = QMetaData::Public;
    slot_tbl[55].name = "set_LAKEFILL(bool)";
    slot_tbl[55].ptr = (QMember)ov1_55;
    slot_tbl_access[55] = QMetaData::Public;
    slot_tbl[56].name = "set_INFILTRATION(const QString&)";
    slot_tbl[56].ptr = (QMember)ov1_56;
    slot_tbl_access[56] = QMetaData::Public;
    slot_tbl[57].name = "set_SOIL_STORE(const QString&)";
    slot_tbl[57].ptr = (QMember)ov1_57;
    slot_tbl_access[57] = QMetaData::Public;
    slot_tbl[58].name = "set_TRANSMISSIVITY(const QString&)";
    slot_tbl[58].ptr = (QMember)ov1_58;
    slot_tbl_access[58] = QMetaData::Public;
    slot_tbl[59].name = "set_KINWAVE_HQEXP(const QString&)";
    slot_tbl[59].ptr = (QMember)ov1_59;
    slot_tbl_access[59] = QMetaData::Public;
    slot_tbl[60].name = "set_FLOWVELOCITY(const QString&)";
    slot_tbl[60].ptr = (QMember)ov1_60;
    slot_tbl_access[60] = QMetaData::Public;
    slot_tbl[61].name = "set_HYDROSHAPEFAC(const QString&)";
    slot_tbl[61].ptr = (QMember)ov1_61;
    slot_tbl_access[61] = QMetaData::Public;
    slot_tbl[62].name = "OPTSINVARINFILTChkBxsinv_switch(int)";
    slot_tbl[62].ptr = (QMember)ov1_62;
    slot_tbl_access[62] = QMetaData::Public;
    slot_tbl[63].name = "set_OPTSINVARINFILT(bool)";
    slot_tbl[63].ptr = (QMember)ov1_63;
    slot_tbl_access[63] = QMetaData::Public;
    slot_tbl[64].name = "set_PERIOD_INFILT(const QString&)";
    slot_tbl[64].ptr = (QMember)ov1_64;
    slot_tbl_access[64] = QMetaData::Public;
    slot_tbl[65].name = "set_MAXICMEAN(const QString&)";
    slot_tbl[65].ptr = (QMember)ov1_65;
    slot_tbl_access[65] = QMetaData::Public;
    slot_tbl[66].name = "RadioButton31sinvar_switch(int)";
    slot_tbl[66].ptr = (QMember)ov1_66;
    slot_tbl_access[66] = QMetaData::Public;
    slot_tbl[67].name = "RadioButton31icap_switch(int)";
    slot_tbl[67].ptr = (QMember)ov1_67;
    slot_tbl_access[67] = QMetaData::Public;
    slot_tbl[68].name = "RadioButton41trans_switch(int)";
    slot_tbl[68].ptr = (QMember)ov1_68;
    slot_tbl_access[68] = QMetaData::Public;
    slot_tbl[69].name = "RadioButton51sws_switch(int)";
    slot_tbl[69].ptr = (QMember)ov1_69;
    slot_tbl_access[69] = QMetaData::Public;
    slot_tbl[70].name = "RadioButton51icap_switch(int)";
    slot_tbl[70].ptr = (QMember)ov1_70;
    slot_tbl_access[70] = QMetaData::Public;
    slot_tbl[71].name = "RadioButton61kin_switch(int)";
    slot_tbl[71].ptr = (QMember)ov1_71;
    slot_tbl_access[71] = QMetaData::Public;
    slot_tbl[72].name = "RadioButton71hydro_switch(int)";
    slot_tbl[72].ptr = (QMember)ov1_72;
    slot_tbl_access[72] = QMetaData::Public;
    slot_tbl[73].name = "set_FLOWGEN(int)";
    slot_tbl[73].ptr = (QMember)ov1_73;
    slot_tbl_access[73] = QMetaData::Public;
    slot_tbl[74].name = "OPTINLETChkBxInflow_switch(int)";
    slot_tbl[74].ptr = (QMember)ov1_74;
    slot_tbl_access[74] = QMetaData::Public;
    slot_tbl[75].name = "set_OPTINLET(bool)";
    slot_tbl[75].ptr = (QMember)ov1_75;
    slot_tbl_access[75] = QMetaData::Public;
    slot_tbl[76].name = "set_INLET_X(const QString&)";
    slot_tbl[76].ptr = (QMember)ov1_76;
    slot_tbl_access[76] = QMetaData::Public;
    slot_tbl[77].name = "set_INLET_Y(const QString&)";
    slot_tbl[77].ptr = (QMember)ov1_77;
    slot_tbl_access[77] = QMetaData::Public;
    slot_tbl[78].name = "set_INDRAREA(const QString&)";
    slot_tbl[78].ptr = (QMember)ov1_78;
    slot_tbl_access[78] = QMetaData::Public;
    slot_tbl[79].name = "set_INSEDLOAD1(const QString&)";
    slot_tbl[79].ptr = (QMember)ov1_79;
    slot_tbl_access[79] = QMetaData::Public;
    slot_tbl[80].name = "set_INSEDLOAD2(const QString&)";
    slot_tbl[80].ptr = (QMember)ov1_80;
    slot_tbl_access[80] = QMetaData::Public;
    slot_tbl[81].name = "set_INSEDLOAD3(const QString&)";
    slot_tbl[81].ptr = (QMember)ov1_81;
    slot_tbl_access[81] = QMetaData::Public;
    slot_tbl[82].name = "set_MAXREGDEPTH(const QString&)";
    slot_tbl[82].ptr = (QMember)ov1_82;
    slot_tbl_access[82] = QMetaData::Public;
    slot_tbl[83].name = "set_OPTDETACHLIM(bool)";
    slot_tbl[83].ptr = (QMember)ov1_83;
    slot_tbl_access[83] = QMetaData::Public;
    slot_tbl[84].name = "set_KF(const QString&)";
    slot_tbl[84].ptr = (QMember)ov1_84;
    slot_tbl_access[84] = QMetaData::Public;
    slot_tbl[85].name = "set_MF(const QString&)";
    slot_tbl[85].ptr = (QMember)ov1_85;
    slot_tbl_access[85] = QMetaData::Public;
    slot_tbl[86].name = "set_NF(const QString&)";
    slot_tbl[86].ptr = (QMember)ov1_86;
    slot_tbl_access[86] = QMetaData::Public;
    slot_tbl[87].name = "set_TAUCD(const QString&)";
    slot_tbl[87].ptr = (QMember)ov1_87;
    slot_tbl_access[87] = QMetaData::Public;
    slot_tbl[88].name = "set_PB(const QString&)";
    slot_tbl[88].ptr = (QMember)ov1_88;
    slot_tbl_access[88] = QMetaData::Public;
    slot_tbl[89].name = "set_OPTDIFFDEP(bool)";
    slot_tbl[89].ptr = (QMember)ov1_89;
    slot_tbl_access[89] = QMetaData::Public;
    slot_tbl[90].name = "set_KD(const QString&)";
    slot_tbl[90].ptr = (QMember)ov1_90;
    slot_tbl_access[90] = QMetaData::Public;
    slot_tbl[91].name = "set_NUMGRNSIZE(const QString&)";
    slot_tbl[91].ptr = (QMember)ov1_91;
    slot_tbl_access[91] = QMetaData::Public;
    slot_tbl[92].name = "set_GRAINDIAM1(const QString&)";
    slot_tbl[92].ptr = (QMember)ov1_92;
    slot_tbl_access[92] = QMetaData::Public;
    slot_tbl[93].name = "set_GRAINDIAM2(const QString&)";
    slot_tbl[93].ptr = (QMember)ov1_93;
    slot_tbl_access[93] = QMetaData::Public;
    slot_tbl[94].name = "set_GRAINDIAM3(const QString&)";
    slot_tbl[94].ptr = (QMember)ov1_94;
    slot_tbl_access[94] = QMetaData::Public;
    slot_tbl[95].name = "set_REGPROPORTION1(const QString&)";
    slot_tbl[95].ptr = (QMember)ov1_95;
    slot_tbl_access[95] = QMetaData::Public;
    slot_tbl[96].name = "set_REGPROPORTION2(const QString&)";
    slot_tbl[96].ptr = (QMember)ov1_96;
    slot_tbl_access[96] = QMetaData::Public;
    slot_tbl[97].name = "set_REGPROPORTION3(const QString&)";
    slot_tbl[97].ptr = (QMember)ov1_97;
    slot_tbl_access[97] = QMetaData::Public;
    slot_tbl[98].name = "set_BRPROPORTION1(const QString&)";
    slot_tbl[98].ptr = (QMember)ov1_98;
    slot_tbl_access[98] = QMetaData::Public;
    slot_tbl[99].name = "set_BRPROPORTION2(const QString&)";
    slot_tbl[99].ptr = (QMember)ov1_99;
    slot_tbl_access[99] = QMetaData::Public;
    slot_tbl[100].name = "set_BRPROPORTION3(const QString&)";
    slot_tbl[100].ptr = (QMember)ov1_100;
    slot_tbl_access[100] = QMetaData::Public;
    slot_tbl[101].name = "set_OPTREADLAYER(bool)";
    slot_tbl[101].ptr = (QMember)ov1_101;
    slot_tbl_access[101] = QMetaData::Public;
    slot_tbl[102].name = "set_KR(const QString&)";
    slot_tbl[102].ptr = (QMember)ov1_102;
    slot_tbl_access[102] = QMetaData::Public;
    slot_tbl[103].name = "set_REGINIT(const QString&)";
    slot_tbl[103].ptr = (QMember)ov1_103;
    slot_tbl_access[103] = QMetaData::Public;
    slot_tbl[104].name = "set_KB(const QString&)";
    slot_tbl[104].ptr = (QMember)ov1_104;
    slot_tbl_access[104] = QMetaData::Public;
    slot_tbl[105].name = "set_MB(const QString&)";
    slot_tbl[105].ptr = (QMember)ov1_105;
    slot_tbl_access[105] = QMetaData::Public;
    slot_tbl[106].name = "set_NB(const QString&)";
    slot_tbl[106].ptr = (QMember)ov1_106;
    slot_tbl_access[106] = QMetaData::Public;
    slot_tbl[107].name = "set_BEDROCKDEPTH(const QString&)";
    slot_tbl[107].ptr = (QMember)ov1_107;
    slot_tbl_access[107] = QMetaData::Public;
    slot_tbl[108].name = "set_FAULTPOS(const QString&)";
    slot_tbl[108].ptr = (QMember)ov1_108;
    slot_tbl_access[108] = QMetaData::Public;
    slot_tbl[109].name = "set_UPDUR(const QString&)";
    slot_tbl[109].ptr = (QMember)ov1_109;
    slot_tbl_access[109] = QMetaData::Public;
    slot_tbl[110].name = "set_UPRATE(const QString&)";
    slot_tbl[110].ptr = (QMember)ov1_110;
    slot_tbl_access[110] = QMetaData::Public;
    slot_tbl[111].name = "RadioButton81Upsy_switch(int)";
    slot_tbl[111].ptr = (QMember)ov1_111;
    slot_tbl_access[111] = QMetaData::Public;
    slot_tbl[112].name = "set_UPTYPE(int)";
    slot_tbl[112].ptr = (QMember)ov1_112;
    slot_tbl_access[112] = QMetaData::Public;
    slot_tbl[113].name = "set_BANKFULLEVENT(const QString&)";
    slot_tbl[113].ptr = (QMember)ov1_113;
    slot_tbl_access[113] = QMetaData::Public;
    slot_tbl[114].name = "set_HYDR_WID_COEFF_DS(const QString&)";
    slot_tbl[114].ptr = (QMember)ov1_114;
    slot_tbl_access[114] = QMetaData::Public;
    slot_tbl[115].name = "set_HYDR_WID_EXP_DS(const QString&)";
    slot_tbl[115].ptr = (QMember)ov1_115;
    slot_tbl_access[115] = QMetaData::Public;
    slot_tbl[116].name = "set_HYDR_WID_EXP_STN(const QString&)";
    slot_tbl[116].ptr = (QMember)ov1_116;
    slot_tbl_access[116] = QMetaData::Public;
    slot_tbl[117].name = "set_HYDR_DEP_COEFF_DS(const QString&)";
    slot_tbl[117].ptr = (QMember)ov1_117;
    slot_tbl_access[117] = QMetaData::Public;
    slot_tbl[118].name = "set_HYDR_DEP_EXP_DS(const QString&)";
    slot_tbl[118].ptr = (QMember)ov1_118;
    slot_tbl_access[118] = QMetaData::Public;
    slot_tbl[119].name = "set_HYDR_DEP_EXP_STN(const QString&)";
    slot_tbl[119].ptr = (QMember)ov1_119;
    slot_tbl_access[119] = QMetaData::Public;
    slot_tbl[120].name = "set_HYDR_ROUGH_COEFF_DS(const QString&)";
    slot_tbl[120].ptr = (QMember)ov1_120;
    slot_tbl_access[120] = QMetaData::Public;
    slot_tbl[121].name = "set_HYDR_ROUGH_EXP_DS(const QString&)";
    slot_tbl[121].ptr = (QMember)ov1_121;
    slot_tbl_access[121] = QMetaData::Public;
    slot_tbl[122].name = "set_HYDR_ROUGH_EXP_STN(const QString&)";
    slot_tbl[122].ptr = (QMember)ov1_122;
    slot_tbl_access[122] = QMetaData::Public;
    slot_tbl[123].name = "set_BANK_ROUGH_COEFF(const QString&)";
    slot_tbl[123].ptr = (QMember)ov1_123;
    slot_tbl_access[123] = QMetaData::Public;
    slot_tbl[124].name = "set_BANK_ROUGH_EXP(const QString&)";
    slot_tbl[124].ptr = (QMember)ov1_124;
    slot_tbl_access[124] = QMetaData::Public;
    slot_tbl[125].name = "OPTMNDRChkBxmndr_switch(int)";
    slot_tbl[125].ptr = (QMember)ov1_125;
    slot_tbl_access[125] = QMetaData::Public;
    slot_tbl[126].name = "set_OPTMNDR(bool)";
    slot_tbl[126].ptr = (QMember)ov1_126;
    slot_tbl_access[126] = QMetaData::Public;
    slot_tbl[127].name = "set_CRITICAL_FLOW(const QString&)";
    slot_tbl[127].ptr = (QMember)ov1_127;
    slot_tbl_access[127] = QMetaData::Public;
    slot_tbl[128].name = "set_DEF_CHAN_DISCR(const QString&)";
    slot_tbl[128].ptr = (QMember)ov1_128;
    slot_tbl_access[128] = QMetaData::Public;
    slot_tbl[129].name = "set_FRAC_WID_MOVE(const QString&)";
    slot_tbl[129].ptr = (QMember)ov1_129;
    slot_tbl_access[129] = QMetaData::Public;
    slot_tbl[130].name = "set_FRAC_WID_ADD(const QString&)";
    slot_tbl[130].ptr = (QMember)ov1_130;
    slot_tbl_access[130] = QMetaData::Public;
    slot_tbl[131].name = "set_VEG_ERODY(const QString&)";
    slot_tbl[131].ptr = (QMember)ov1_131;
    slot_tbl_access[131] = QMetaData::Public;
    slot_tbl[132].name = "set_LATADJUST(const QString&)";
    slot_tbl[132].ptr = (QMember)ov1_132;
    slot_tbl_access[132] = QMetaData::Public;
    slot_tbl[133].name = "set_BNKHTDEP(bool)";
    slot_tbl[133].ptr = (QMember)ov1_133;
    slot_tbl_access[133] = QMetaData::Public;
    slot_tbl[134].name = "set_OPTINTERPLAYER(bool)";
    slot_tbl[134].ptr = (QMember)ov1_134;
    slot_tbl_access[134] = QMetaData::Public;
    slot_tbl[135].name = "set_FP_MU(const QString&)";
    slot_tbl[135].ptr = (QMember)ov1_135;
    slot_tbl_access[135] = QMetaData::Public;
    slot_tbl[136].name = "set_FP_LAMBDA(const QString&)";
    slot_tbl[136].ptr = (QMember)ov1_136;
    slot_tbl_access[136] = QMetaData::Public;
    slot_tbl[137].name = "set_PF_DRAREAMIN(const QString&)";
    slot_tbl[137].ptr = (QMember)ov1_137;
    slot_tbl_access[137] = QMetaData::Public;
    slot_tbl[138].name = "set_FP_BANKFULLEVENT(const QString&)";
    slot_tbl[138].ptr = (QMember)ov1_138;
    slot_tbl_access[138] = QMetaData::Public;
    slot_tbl[139].name = "OPTFLOODPLAINChkBxovdep_switch(int)";
    slot_tbl[139].ptr = (QMember)ov1_139;
    slot_tbl_access[139] = QMetaData::Public;
    slot_tbl[140].name = "set_OPTFLOODPLAIN(bool)";
    slot_tbl[140].ptr = (QMember)ov1_140;
    slot_tbl_access[140] = QMetaData::Public;
    slot_tbl[141].name = "set_LOESS_DEP_RATE(const QString&)";
    slot_tbl[141].ptr = (QMember)ov1_141;
    slot_tbl_access[141] = QMetaData::Public;
    slot_tbl[142].name = "OPTLOESSDEPChkBxeodep_switch(int)";
    slot_tbl[142].ptr = (QMember)ov1_142;
    slot_tbl_access[142] = QMetaData::Public;
    slot_tbl[143].name = "set_OPTLOESSDEP(bool)";
    slot_tbl[143].ptr = (QMember)ov1_143;
    slot_tbl_access[143] = QMetaData::Public;
    slot_tbl[144].name = "set_OPTEXPOSURETIME(bool)";
    slot_tbl[144].ptr = (QMember)ov1_144;
    slot_tbl_access[144] = QMetaData::Public;
    slot_tbl[145].name = "set_BiLine_a1var(const QString&)";
    slot_tbl[145].ptr = (QMember)ov1_145;
    slot_tbl_access[145] = QMetaData::Public;
    slot_tbl[146].name = "set_BiLine_b1var(const QString&)";
    slot_tbl[146].ptr = (QMember)ov1_146;
    slot_tbl_access[146] = QMetaData::Public;
    slot_tbl[147].name = "set_BiLine_a2var(const QString&)";
    slot_tbl[147].ptr = (QMember)ov1_147;
    slot_tbl_access[147] = QMetaData::Public;
    slot_tbl[148].name = "set_BiLine_b2var(const QString&)";
    slot_tbl[148].ptr = (QMember)ov1_148;
    slot_tbl_access[148] = QMetaData::Public;
    slot_tbl[149].name = "set_BiLine_a3var(const QString&)";
    slot_tbl[149].ptr = (QMember)ov1_149;
    slot_tbl_access[149] = QMetaData::Public;
    slot_tbl[150].name = "set_BiLine_b3var(const QString&)";
    slot_tbl[150].ptr = (QMember)ov1_150;
    slot_tbl_access[150] = QMetaData::Public;
    slot_tbl[151].name = "set_BiLine_a4var(const QString&)";
    slot_tbl[151].ptr = (QMember)ov1_151;
    slot_tbl_access[151] = QMetaData::Public;
    slot_tbl[152].name = "set_BiLine_b4var(const QString&)";
    slot_tbl[152].ptr = (QMember)ov1_152;
    slot_tbl_access[152] = QMetaData::Public;
    slot_tbl[153].name = "set_BiLine_a5var(const QString&)";
    slot_tbl[153].ptr = (QMember)ov1_153;
    slot_tbl_access[153] = QMetaData::Public;
    slot_tbl[154].name = "set_BiLine_b5var(const QString&)";
    slot_tbl[154].ptr = (QMember)ov1_154;
    slot_tbl_access[154] = QMetaData::Public;
    slot_tbl[155].name = "set_BiLine_a6var(const QString&)";
    slot_tbl[155].ptr = (QMember)ov1_155;
    slot_tbl_access[155] = QMetaData::Public;
    slot_tbl[156].name = "set_BiLine_b6var(const QString&)";
    slot_tbl[156].ptr = (QMember)ov1_156;
    slot_tbl_access[156] = QMetaData::Public;
    slot_tbl[157].name = "set_BiLine_a7var(const QString&)";
    slot_tbl[157].ptr = (QMember)ov1_157;
    slot_tbl_access[157] = QMetaData::Public;
    slot_tbl[158].name = "set_BiLine_b7var(const QString&)";
    slot_tbl[158].ptr = (QMember)ov1_158;
    slot_tbl_access[158] = QMetaData::Public;
    slot_tbl[159].name = "set_BiLine_a8var(const QString&)";
    slot_tbl[159].ptr = (QMember)ov1_159;
    slot_tbl_access[159] = QMetaData::Public;
    slot_tbl[160].name = "set_BiLine_b8var(const QString&)";
    slot_tbl[160].ptr = (QMember)ov1_160;
    slot_tbl_access[160] = QMetaData::Public;
    slot_tbl[161].name = "set_BiLine_a9var(const QString&)";
    slot_tbl[161].ptr = (QMember)ov1_161;
    slot_tbl_access[161] = QMetaData::Public;
    slot_tbl[162].name = "set_BiLine_b9var(const QString&)";
    slot_tbl[162].ptr = (QMember)ov1_162;
    slot_tbl_access[162] = QMetaData::Public;
    slot_tbl[163].name = "set_BiLine_a01var(const QString&)";
    slot_tbl[163].ptr = (QMember)ov1_163;
    slot_tbl_access[163] = QMetaData::Public;
    slot_tbl[164].name = "set_BiLine_b01var(const QString&)";
    slot_tbl[164].ptr = (QMember)ov1_164;
    slot_tbl_access[164] = QMetaData::Public;
    slot_tbl[165].name = "set_BiLine_a11var(const QString&)";
    slot_tbl[165].ptr = (QMember)ov1_165;
    slot_tbl_access[165] = QMetaData::Public;
    slot_tbl[166].name = "set_BiLine_b11var(const QString&)";
    slot_tbl[166].ptr = (QMember)ov1_166;
    slot_tbl_access[166] = QMetaData::Public;
    slot_tbl[167].name = "set_BiLine_a21var(const QString&)";
    slot_tbl[167].ptr = (QMember)ov1_167;
    slot_tbl_access[167] = QMetaData::Public;
    slot_tbl[168].name = "set_BiLine_b21var(const QString&)";
    slot_tbl[168].ptr = (QMember)ov1_168;
    slot_tbl_access[168] = QMetaData::Public;
    metaObj = QMetaObject::new_metaobject(
	"Chintz_base", "QDialog",
	slot_tbl, 169,
	0, 0,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    metaObj->set_slot_access( slot_tbl_access );
#ifndef QT_NO_PROPERTIES
#endif // QT_NO_PROPERTIES
    return metaObj;
}
