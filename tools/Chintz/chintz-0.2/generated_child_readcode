if(val.find("TYP_BOUND:")!=string::npos){
detected=true;
TYP_BOUNDBGroup->setButton(qty.toInt());
set_TYP_BOUND(qty.toInt());}
if(val.find("OPT_PT_PLACE:")!=string::npos){
detected=true;
OPT_PT_PLACEBGroup->setButton(qty.toInt());
set_OPT_PT_PLACE(qty.toInt());}
if(val.find("X_GRID_SIZE:")!=string::npos){
detected=true;
X_GRID_SIZELine->setText(qty);
set_X_GRID_SIZE(qty);}
if(val.find("Y_GRID_SIZE:")!=string::npos){
detected=true;
Y_GRID_SIZELine->setText(qty);
set_Y_GRID_SIZE(qty);}
if(val.find("GRID_SPACING:")!=string::npos){
detected=true;
GRID_SPACINGLine->setText(qty);
set_GRID_SPACING(qty);}
if(val.find("NUM_PTS:")!=string::npos){
detected=true;
NUM_PTSLine->setText(qty);
set_NUM_PTS(qty);}
if(val.find("OUTLET_X_COORD:")!=string::npos){
detected=true;
OUTLET_X_COORDLine->setText(qty);
set_OUTLET_X_COORD(qty);}
if(val.find("OUTLET_Y_COORD:")!=string::npos){
detected=true;
OUTLET_Y_COORDLine->setText(qty);
set_OUTLET_Y_COORD(qty);}
if(val.find("SLOPED_SURF:")!=string::npos){
detected=true;
SLOPED_SURFChkBx->setChecked(qty.toInt());
set_SLOPED_SURF(qty.toInt());}
if(val.find("UPPER_BOUND_Z:")!=string::npos){
detected=true;
UPPER_BOUND_ZLine->setText(qty);
set_UPPER_BOUND_Z(qty);}
if(val.find("MEAN_ELEV:")!=string::npos){
detected=true;
MEAN_ELEVLine->setText(qty);
set_MEAN_ELEV(qty);}
if(val.find("OPTREADINPUT:")!=string::npos){
detected=true;
OPTREADINPUTBGroup->setButton(qty.toInt());
set_OPTREADINPUT(qty.toInt());}
if(val.find("INPUTDATAFILE:")!=string::npos){
detected=true;
INPUTDATAFILELine->setText(qty);
set_INPUTDATAFILE(qty);}
if(val.find("INPUTTIME:")!=string::npos){
detected=true;
INPUTTIMELine->setText(qty);
set_INPUTTIME(qty);}
if(val.find("OUTFILENAME:")!=string::npos){
detected=true;
OUTFILENAMELine->setText(qty);
set_OUTFILENAME(qty);}
if(val.find("POINTFILENAME:")!=string::npos){
detected=true;
POINTFILENAMELine->setText(qty);
set_POINTFILENAME(qty);}
if(val.find("ARCGRIDFILENAME:")!=string::npos){
detected=true;
ARCGRIDFILENAMELine->setText(qty);
set_ARCGRIDFILENAME(qty);}
if(val.find("RUNTIME:")!=string::npos){
detected=true;
RUNTIMELine->setText(qty);
set_RUNTIME(qty);}
if(val.find("OPINTRVL:")!=string::npos){
detected=true;
OPINTRVLLine->setText(qty);
set_OPINTRVL(qty);}
if(val.find("OPTSINVAR:")!=string::npos){
detected=true;
OPTSINVARChkBx->setChecked(qty.toInt());
set_OPTSINVAR(qty.toInt());}
if(val.find("OPTVAR:")!=string::npos){
detected=true;
OPTVARChkBx->setChecked(qty.toInt());
set_OPTVAR(qty.toInt());}
if(val.find("SEED:")!=string::npos){
detected=true;
SEEDLine->setText(qty);
set_SEED(qty);}
if(val.find("PMEAN:")!=string::npos){
detected=true;
PMEANLine->setText(qty);
set_PMEAN(qty);}
if(val.find("STDUR:")!=string::npos){
detected=true;
STDURLine->setText(qty);
set_STDUR(qty);}
if(val.find("ISTDUR:")!=string::npos){
detected=true;
ISTDURLine->setText(qty);
set_ISTDUR(qty);}
if(val.find("PERIOD:")!=string::npos){
detected=true;
PERIODLine->setText(qty);
set_PERIOD(qty);}
if(val.find("MAXPMEAN:")!=string::npos){
detected=true;
MAXPMEANLine->setText(qty);
set_MAXPMEAN(qty);}
if(val.find("MAXSTDURNM:")!=string::npos){
detected=true;
MAXSTDURNMLine->setText(qty);
set_MAXSTDURNM(qty);}
if(val.find("MAXISTDURMN:")!=string::npos){
detected=true;
MAXISTDURMNLine->setText(qty);
set_MAXISTDURMN(qty);}
if(val.find("LAKEFILL:")!=string::npos){
detected=true;
LAKEFILLChkBx->setChecked(qty.toInt());
set_LAKEFILL(qty.toInt());}
if(val.find("INFILTRATION:")!=string::npos){
detected=true;
INFILTRATIONLine->setText(qty);
set_INFILTRATION(qty);}
if(val.find("SOIL_STORE:")!=string::npos){
detected=true;
SOIL_STORELine->setText(qty);
set_SOIL_STORE(qty);}
if(val.find("TRANSMISSIVITY:")!=string::npos){
detected=true;
TRANSMISSIVITYLine->setText(qty);
set_TRANSMISSIVITY(qty);}
if(val.find("KINWAVE_HQEXP:")!=string::npos){
detected=true;
KINWAVE_HQEXPLine->setText(qty);
set_KINWAVE_HQEXP(qty);}
if(val.find("FLOWVELOCITY:")!=string::npos){
detected=true;
FLOWVELOCITYLine->setText(qty);
set_FLOWVELOCITY(qty);}
if(val.find("HYDROSHAPEFAC:")!=string::npos){
detected=true;
HYDROSHAPEFACLine->setText(qty);
set_HYDROSHAPEFAC(qty);}
if(val.find("OPTSINVARINFILT:")!=string::npos){
detected=true;
OPTSINVARINFILTChkBx->setChecked(qty.toInt());
set_OPTSINVARINFILT(qty.toInt());}
if(val.find("PERIOD_INFILT:")!=string::npos){
detected=true;
PERIOD_INFILTLine->setText(qty);
set_PERIOD_INFILT(qty);}
if(val.find("MAXICMEAN:")!=string::npos){
detected=true;
MAXICMEANLine->setText(qty);
set_MAXICMEAN(qty);}
if(val.find("FLOWGEN:")!=string::npos){
detected=true;
FLOWGENBGroup->setButton(qty.toInt());
set_FLOWGEN(qty.toInt());}
if(val.find("OPTINLET:")!=string::npos){
detected=true;
OPTINLETChkBx->setChecked(qty.toInt());
set_OPTINLET(qty.toInt());}
if(val.find("INLET_X:")!=string::npos){
detected=true;
INLET_XLine->setText(qty);
set_INLET_X(qty);}
if(val.find("INLET_Y:")!=string::npos){
detected=true;
INLET_YLine->setText(qty);
set_INLET_Y(qty);}
if(val.find("INDRAREA:")!=string::npos){
detected=true;
INDRAREALine->setText(qty);
set_INDRAREA(qty);}
if(val.find("INSEDLOAD1:")!=string::npos){
detected=true;
INSEDLOAD1Line->setText(qty);
set_INSEDLOAD1(qty);}
if(val.find("INSEDLOAD2:")!=string::npos){
detected=true;
INSEDLOAD2Line->setText(qty);
set_INSEDLOAD2(qty);}
if(val.find("INSEDLOAD3:")!=string::npos){
detected=true;
INSEDLOAD3Line->setText(qty);
set_INSEDLOAD3(qty);}
if(val.find("MAXREGDEPTH:")!=string::npos){
detected=true;
MAXREGDEPTHLine->setText(qty);
set_MAXREGDEPTH(qty);}
if(val.find("OPTDETACHLIM:")!=string::npos){
detected=true;
OPTDETACHLIMChkBx->setChecked(qty.toInt());
set_OPTDETACHLIM(qty.toInt());}
if(val.find("KF:")!=string::npos){
detected=true;
KFLine->setText(qty);
set_KF(qty);}
if(val.find("MF:")!=string::npos){
detected=true;
MFLine->setText(qty);
set_MF(qty);}
if(val.find("NF:")!=string::npos){
detected=true;
NFLine->setText(qty);
set_NF(qty);}
if(val.find("TAUCD:")!=string::npos){
detected=true;
TAUCDLine->setText(qty);
set_TAUCD(qty);}
if(val.find("PB:")!=string::npos){
detected=true;
PBLine->setText(qty);
set_PB(qty);}
if(val.find("OPTDIFFDEP:")!=string::npos){
detected=true;
OPTDIFFDEPChkBx->setChecked(qty.toInt());
set_OPTDIFFDEP(qty.toInt());}
if(val.find("KD:")!=string::npos){
detected=true;
KDLine->setText(qty);
set_KD(qty);}
if(val.find("NUMGRNSIZE:")!=string::npos){
detected=true;
NUMGRNSIZELine->setText(qty);
set_NUMGRNSIZE(qty);}
if(val.find("GRAINDIAM1:")!=string::npos){
detected=true;
GRAINDIAM1Line->setText(qty);
set_GRAINDIAM1(qty);}
if(val.find("GRAINDIAM2:")!=string::npos){
detected=true;
GRAINDIAM2Line->setText(qty);
set_GRAINDIAM2(qty);}
if(val.find("GRAINDIAM3:")!=string::npos){
detected=true;
GRAINDIAM3Line->setText(qty);
set_GRAINDIAM3(qty);}
if(val.find("REGPROPORTION1:")!=string::npos){
detected=true;
REGPROPORTION1Line->setText(qty);
set_REGPROPORTION1(qty);}
if(val.find("REGPROPORTION2:")!=string::npos){
detected=true;
REGPROPORTION2Line->setText(qty);
set_REGPROPORTION2(qty);}
if(val.find("REGPROPORTION3:")!=string::npos){
detected=true;
REGPROPORTION3Line->setText(qty);
set_REGPROPORTION3(qty);}
if(val.find("BRPROPORTION1:")!=string::npos){
detected=true;
BRPROPORTION1Line->setText(qty);
set_BRPROPORTION1(qty);}
if(val.find("BRPROPORTION2:")!=string::npos){
detected=true;
BRPROPORTION2Line->setText(qty);
set_BRPROPORTION2(qty);}
if(val.find("BRPROPORTION3:")!=string::npos){
detected=true;
BRPROPORTION3Line->setText(qty);
set_BRPROPORTION3(qty);}
if(val.find("OPTREADLAYER:")!=string::npos){
detected=true;
OPTREADLAYERChkBx->setChecked(qty.toInt());
set_OPTREADLAYER(qty.toInt());}
if(val.find("KR:")!=string::npos){
detected=true;
KRLine->setText(qty);
set_KR(qty);}
if(val.find("REGINIT:")!=string::npos){
detected=true;
REGINITLine->setText(qty);
set_REGINIT(qty);}
if(val.find("KB:")!=string::npos){
detected=true;
KBLine->setText(qty);
set_KB(qty);}
if(val.find("MB:")!=string::npos){
detected=true;
MBLine->setText(qty);
set_MB(qty);}
if(val.find("NB:")!=string::npos){
detected=true;
NBLine->setText(qty);
set_NB(qty);}
if(val.find("BEDROCKDEPTH:")!=string::npos){
detected=true;
BEDROCKDEPTHLine->setText(qty);
set_BEDROCKDEPTH(qty);}
if(val.find("FAULTPOS:")!=string::npos){
detected=true;
FAULTPOSLine->setText(qty);
set_FAULTPOS(qty);}
if(val.find("UPDUR:")!=string::npos){
detected=true;
UPDURLine->setText(qty);
set_UPDUR(qty);}
if(val.find("UPRATE:")!=string::npos){
detected=true;
UPRATELine->setText(qty);
set_UPRATE(qty);}
if(val.find("UPTYPE:")!=string::npos){
detected=true;
UPTYPEBGroup->setButton(qty.toInt());
set_UPTYPE(qty.toInt());}
if(val.find("BANKFULLEVENT:")!=string::npos){
detected=true;
BANKFULLEVENTLine->setText(qty);
set_BANKFULLEVENT(qty);}
if(val.find("HYDR_WID_COEFF_DS:")!=string::npos){
detected=true;
HYDR_WID_COEFF_DSLine->setText(qty);
set_HYDR_WID_COEFF_DS(qty);}
if(val.find("HYDR_WID_EXP_DS:")!=string::npos){
detected=true;
HYDR_WID_EXP_DSLine->setText(qty);
set_HYDR_WID_EXP_DS(qty);}
if(val.find("HYDR_WID_EXP_STN:")!=string::npos){
detected=true;
HYDR_WID_EXP_STNLine->setText(qty);
set_HYDR_WID_EXP_STN(qty);}
if(val.find("HYDR_DEP_COEFF_DS:")!=string::npos){
detected=true;
HYDR_DEP_COEFF_DSLine->setText(qty);
set_HYDR_DEP_COEFF_DS(qty);}
if(val.find("HYDR_DEP_EXP_DS:")!=string::npos){
detected=true;
HYDR_DEP_EXP_DSLine->setText(qty);
set_HYDR_DEP_EXP_DS(qty);}
if(val.find("HYDR_DEP_EXP_STN:")!=string::npos){
detected=true;
HYDR_DEP_EXP_STNLine->setText(qty);
set_HYDR_DEP_EXP_STN(qty);}
if(val.find("HYDR_ROUGH_COEFF_DS:")!=string::npos){
detected=true;
HYDR_ROUGH_COEFF_DSLine->setText(qty);
set_HYDR_ROUGH_COEFF_DS(qty);}
if(val.find("HYDR_ROUGH_EXP_DS:")!=string::npos){
detected=true;
HYDR_ROUGH_EXP_DSLine->setText(qty);
set_HYDR_ROUGH_EXP_DS(qty);}
if(val.find("HYDR_ROUGH_EXP_STN:")!=string::npos){
detected=true;
HYDR_ROUGH_EXP_STNLine->setText(qty);
set_HYDR_ROUGH_EXP_STN(qty);}
if(val.find("BANK_ROUGH_COEFF:")!=string::npos){
detected=true;
BANK_ROUGH_COEFFLine->setText(qty);
set_BANK_ROUGH_COEFF(qty);}
if(val.find("BANK_ROUGH_EXP:")!=string::npos){
detected=true;
BANK_ROUGH_EXPLine->setText(qty);
set_BANK_ROUGH_EXP(qty);}
if(val.find("OPTMNDR:")!=string::npos){
detected=true;
OPTMNDRChkBx->setChecked(qty.toInt());
set_OPTMNDR(qty.toInt());}
if(val.find("CRITICAL_FLOW:")!=string::npos){
detected=true;
CRITICAL_FLOWLine->setText(qty);
set_CRITICAL_FLOW(qty);}
if(val.find("DEF_CHAN_DISCR:")!=string::npos){
detected=true;
DEF_CHAN_DISCRLine->setText(qty);
set_DEF_CHAN_DISCR(qty);}
if(val.find("FRAC_WID_MOVE:")!=string::npos){
detected=true;
FRAC_WID_MOVELine->setText(qty);
set_FRAC_WID_MOVE(qty);}
if(val.find("FRAC_WID_ADD:")!=string::npos){
detected=true;
FRAC_WID_ADDLine->setText(qty);
set_FRAC_WID_ADD(qty);}
if(val.find("VEG_ERODY:")!=string::npos){
detected=true;
VEG_ERODYLine->setText(qty);
set_VEG_ERODY(qty);}
if(val.find("LATADJUST:")!=string::npos){
detected=true;
LATADJUSTLine->setText(qty);
set_LATADJUST(qty);}
if(val.find("BNKHTDEP:")!=string::npos){
detected=true;
BNKHTDEPChkBx->setChecked(qty.toInt());
set_BNKHTDEP(qty.toInt());}
if(val.find("OPTINTERPLAYER:")!=string::npos){
detected=true;
OPTINTERPLAYERChkBx->setChecked(qty.toInt());
set_OPTINTERPLAYER(qty.toInt());}
if(val.find("FP_MU:")!=string::npos){
detected=true;
FP_MULine->setText(qty);
set_FP_MU(qty);}
if(val.find("FP_LAMBDA:")!=string::npos){
detected=true;
FP_LAMBDALine->setText(qty);
set_FP_LAMBDA(qty);}
if(val.find("PF_DRAREAMIN:")!=string::npos){
detected=true;
PF_DRAREAMINLine->setText(qty);
set_PF_DRAREAMIN(qty);}
if(val.find("FP_BANKFULLEVENT:")!=string::npos){
detected=true;
FP_BANKFULLEVENTLine->setText(qty);
set_FP_BANKFULLEVENT(qty);}
if(val.find("OPTFLOODPLAIN:")!=string::npos){
detected=true;
OPTFLOODPLAINChkBx->setChecked(qty.toInt());
set_OPTFLOODPLAIN(qty.toInt());}
if(val.find("LOESS_DEP_RATE:")!=string::npos){
detected=true;
LOESS_DEP_RATELine->setText(qty);
set_LOESS_DEP_RATE(qty);}
if(val.find("OPTLOESSDEP:")!=string::npos){
detected=true;
OPTLOESSDEPChkBx->setChecked(qty.toInt());
set_OPTLOESSDEP(qty.toInt());}
if(val.find("OPTEXPOSURETIME:")!=string::npos){
detected=true;
OPTEXPOSURETIMEChkBx->setChecked(qty.toInt());
set_OPTEXPOSURETIME(qty.toInt());}
