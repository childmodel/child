#!/usr/explorer/bin/explorer cxModuleResources ascii 5.0
#Tag 0x10604
# name ReadChild
# makefile 
# includeDirs -I. 
# userLibs 
# aout ReadChild
# mcwType cx_mcw_default
# mdwFileName ReadChild.mdw.c
# reWrapOkay cx_true
# collaborative cx_false
# linkageType cx_linkage_cplusplus
# filename ReadChild.cpp readChildData.cpp
# language cx_lang_cplusplus
# numFunctions 1
# inPort cxParameter
# inPort cxParameter
# inPort cxParameter
# outPort cxPyramid
# outPort cxParameter
# typeLibs libcxLattice.a
# typeLibs libcxParameter.a
# typeLibs libcxPyramid.a
# installFileList 

(cxModuleResources
    {	(moduleInfo =cxAdminRes
	    {	(name "ReadChild")
		(type =cxModuleClass
		    {	(className "")
		    }
		)
		(author "")
		(creationDate =cxDate "")
		(lastModDate =cxDate "Tue Jun 18 13:22:58 2002\n")
		(institution "")
		(permissions =cxModulePerms
		    {	(code 0)
		    }
		)
		(machines =cxMachineSet
		    {	(numMachines 1)
			(machines @0)
		    }
		)
	    }
	)
	(sourceInfo =cxSourceRes
	    {	(buildInfo =cxBuildRes
		    {	(makefile =cxFileName "")
			(includeDirs "-I. ")
			(userLibs "")
			(headers =cxFileName "")
			(mcwType =cxMcwType cx_mcw_default)
			(mcwFileName =cxFileName NULL)
			(mdwFileName =cxFileName "ReadChild.mdw.c")
			(semiWrapped =cxBoolean cx_false)
			(reWrapOkay =cxBoolean cx_true)
			(linkageType =cxLinkageType cx_linkage_cplusplus)
		    }
		)
		(numFunctions 1)
		(functionInfo @1)
		(hooks =cxHookFuncRes
		    {	(init NULL)
			(remove NULL)
			(connectInput NULL)
			(connectOutput NULL)
			(disconnectInput NULL)
			(disconnectOutput NULL)
			(create NULL)
		    }
		)
	    }
	)
	(documentInfo =cxDocumentRes
	    {	(manPage =cxFileName "ReadChild.doc")
		(samples 1)
		(sampleInfo @2)
	    }
	)
	(nPortIn 3)
	(portInInfo @3)
	(nPortOut 2)
	(portOutInfo @4)
	(panels 1)
	(conPanInfo @5)
	(execInfo =cxExecRes
	    {	(aout =cxFileName "ReadChild")
		(firingRule =cxFiringRule
		    {	(text NULL)
		    }
		)
		(noStdio =cxBoolean cx_false)
		(controlType =cxControlType cx_control_none)
	    }
	)
    }
)
(@0 =cxPortedMachine [1] cx_ported_sgi)
(@1 =cxFunctionRes [1]
    {	(name "ReadChild")
	(filename =cxFileName "ReadChild.cpp readChildData.cpp")
	(mdwAInfo =cxFunctionArgInfo
	    {	(hasReturn =cxBoolean cx_false)
		(ret cx_false
		)
		(numArgs 4)
		(arg @6)
	    }
	)
	(mdwEInfo =cxFunctionErrCodeInfo
	    {	(returnCodeOrigin =cxReturnCodeSource
		cx_return_code_unconnected)
		(rc cx_return_code_unconnected
		)
		(testVal 0)
		(comparesIsSuccess =cxBoolean cx_false)
	    }
	)
	(mdwPInfo =cxFunctionOPortInfo
	    {	(numPorts 2)
		(ports @7)
	    }
	)
	(direction =cxFunctionDirection cx_func_forward)
	(language =cxFunctionLanguage cx_lang_cplusplus)
	(clippingFlag =cxErrorCode cx_err_none)
    }
)
(@2 =cxModuleName [1]
    {	(name "")
    }
)
(@3 =cxPortRes [3]
    {	(type "cxParameter")
	(name "Time Step")
	(invisible =cxBoolean cx_false)
	(direction =cxPortDir cx_port_input)
	(p cx_port_input
	    {	(cache =cxBoolean cx_false)
	    }
	)
	(optional =cxBoolean cx_false)
	(fan =cxBoolean cx_false)
	(coerce =cxBoolean cx_true)
	(constraint =cxPortConstraint
	    {	(nType 0)
		(nConstr 0)
	    }
	)
    }
    {	(type "cxParameter")
	(name "File Name")
	(invisible =cxBoolean cx_false)
	(direction =cxPortDir cx_port_input)
	(p cx_port_input
	    {	(cache =cxBoolean cx_false)
	    }
	)
	(optional =cxBoolean cx_false)
	(fan =cxBoolean cx_false)
	(coerce =cxBoolean cx_true)
	(constraint =cxPortConstraint
	    {	(nType 0)
		(nConstr 0)
	    }
	)
    }
    {	(type "cxParameter")
	(name "Variable")
	(invisible =cxBoolean cx_false)
	(direction =cxPortDir cx_port_input)
	(p cx_port_input
	    {	(cache =cxBoolean cx_false)
	    }
	)
	(optional =cxBoolean cx_false)
	(fan =cxBoolean cx_false)
	(coerce =cxBoolean cx_true)
	(constraint =cxPortConstraint
	    {	(nType 0)
		(nConstr 0)
	    }
	)
    }
)
(@4 =cxPortRes [2]
    {	(type "cxPyramid")
	(name "Output")
	(invisible =cxBoolean cx_false)
	(direction =cxPortDir cx_port_output)
	(p cx_port_output
	)
	(optional =cxBoolean cx_false)
	(fan =cxBoolean cx_false)
	(coerce =cxBoolean cx_true)
	(constraint =cxPortConstraint
	    {	(nType 1)
		(portType @8)
		(nConstr 4)
		(constraints @9)
	    }
	)
    }
    {	(type "cxParameter")
	(name "Time")
	(invisible =cxBoolean cx_false)
	(direction =cxPortDir cx_port_output)
	(p cx_port_output
	)
	(optional =cxBoolean cx_false)
	(fan =cxBoolean cx_false)
	(coerce =cxBoolean cx_true)
	(constraint =cxPortConstraint
	    {	(nType 1)
		(portType @10)
		(nConstr 0)
	    }
	)
    }
)
(@5 =cxConPanRes [1]
    {	(instIcon =cxIcon
	    {	(style cx_icon_xbm)
		(u cx_icon_xbm
		    {	(file =cxFileName NULL)
		    }
		)
	    }
	)
	(frame
	    {	(title "")
		(style "")
		(fgColor "")
		(bgColor "")
		(textColor "")
	    }
	)
	(style =cxFrameStyle cx_frame_full)
	(disabled =cxBoolean cx_false)
	(helpMapped =cxBoolean cx_false)
	(fireEdMapped =cxBoolean cx_false)
	(size =cxWidgetSize
	    {	(width 0)
		(height 0)
	    }
	)
	(position =cxWidgetPos
	    {	(x 0)
		(y 0)
	    }
	)
	(numWidgets 3)
	(widgets @11)
	(menuBarRes @12)
    }
)
(@6 =cxFunctionArg [4]
    {	(name "TimeStep")
	(type "cx_var_integer")
	(array =cxBoolean cx_false)
	(byReference =cxBoolean cx_false)
	(freeWhenDone =cxBoolean cx_false)
	(rw =cxRDWRType cx_arg_rdwr)
	(argOrigin =cxArgSource cx_arg_port)
	(in cx_arg_port
	    {	(portNum 0)
		(field "->p.cx_param_long.val")
	    }
	)
    }
    {	(name "TypeVariable")
	(type "cx_var_integer")
	(array =cxBoolean cx_false)
	(byReference =cxBoolean cx_false)
	(freeWhenDone =cxBoolean cx_false)
	(rw =cxRDWRType cx_arg_rdwr)
	(argOrigin =cxArgSource cx_arg_port)
	(in cx_arg_port
	    {	(portNum 2)
		(field "->p.cx_param_long.val")
	    }
	)
    }
    {	(name "pyramid")
	(type "cxPyramid")
	(array =cxBoolean cx_false)
	(byReference =cxBoolean cx_true)
	(freeWhenDone =cxBoolean cx_false)
	(rw =cxRDWRType cx_arg_rdwr)
	(argOrigin =cxArgSource cx_arg_unconnected)
	(in cx_arg_unconnected
	)
    }
    {	(name "currentTime")
	(type "cxParameter")
	(array =cxBoolean cx_false)
	(byReference =cxBoolean cx_true)
	(freeWhenDone =cxBoolean cx_false)
	(rw =cxRDWRType cx_arg_rdwr)
	(argOrigin =cxArgSource cx_arg_unconnected)
	(in cx_arg_unconnected
	)
    }
)
(@7 =cxFunctionOPortDetail [2]
    {	(portID 0)
	(numFields 1)
	(portField @13)
    }
    {	(portID 0)
	(numFields 1)
	(portField @14)
    }
)
(@8 [1] "cxPyramid")
(@9 =cxMemberConstraint [4]
    {	(memberName "->baseLattice")
	(nRange 1)
	(range @15)
    }
    {	(memberName "->count")
	(nRange 1)
	(range @16)
    }
    {	(memberName "->ref.dictionary->nDim")
	(nRange 1)
	(range @17)
    }
    {	(memberName "->ref.compressType")
	(nRange 1)
	(range @18)
    }
)
(@10 [1] "cxParameter")
(@11 =cxWidgetRes [3]
    {	(name "Time Step")
	(port "Time Step")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_text)
	(label "Time Step")
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_set)
	(honorHeight =cxTriStateBoolean cx_set)
	(fixedWidth =cxTriStateBoolean cx_set)
	(fixedHeight =cxTriStateBoolean cx_set)
	(stackingOrder 0)
	(dimin
	    {	(isMapped =cxBoolean cx_true)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 0)
			(y 0)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_true)
		(size =cxWidgetSize
		    {	(width 150)
			(height 60)
		    }
		)
		(position =cxWidgetPos
		    {	(x 10)
			(y 75)
		    }
		)
	    }
	)
	(t cx_widget_text
	    {	(initVal "1")
	    }
	)
    }
    {	(name "File Name")
	(port "File Name")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_text)
	(label "File Name")
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_set)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_set)
	(stackingOrder 1)
	(dimin
	    {	(isMapped =cxBoolean cx_true)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 0)
			(y 0)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_true)
		(size =cxWidgetSize
		    {	(width 150)
			(height 60)
		    }
		)
		(position =cxWidgetPos
		    {	(x 10)
			(y 10)
		    }
		)
	    }
	)
	(t cx_widget_text
	    {	(initVal "")
	    }
	)
    }
    {	(name "Variable")
	(port "Variable")
	(pfunc NULL)
	(direction cx_widget_input)
	(type =cxWidgetType cx_widget_option_menu)
	(label "Variable")
	(fgColor NULL)
	(bgColor NULL)
	(textColor NULL)
	(font NULL)
	(continuous =cxBoolean cx_false)
	(honorWidth =cxTriStateBoolean cx_unspecified)
	(honorHeight =cxTriStateBoolean cx_unspecified)
	(fixedWidth =cxTriStateBoolean cx_unspecified)
	(fixedHeight =cxTriStateBoolean cx_unspecified)
	(stackingOrder 2)
	(dimin
	    {	(isMapped =cxBoolean cx_true)
		(size =cxWidgetSize
		    {	(width 0)
			(height 0)
		    }
		)
		(position =cxWidgetPos
		    {	(x 0)
			(y 0)
		    }
		)
	    }
	)
	(full
	    {	(isMapped =cxBoolean cx_true)
		(size =cxWidgetSize
		    {	(width 130)
			(height 60)
		    }
		)
		(position =cxWidgetPos
		    {	(x 195)
			(y 10)
		    }
		)
	    }
	)
	(t cx_widget_option_menu
	    {	(d =cxWidgetOptionMenu
		    {	(nMembers 8)
			(members @19)
			(initVal 0)
		    }
		)
	    }
	)
    }
)
(@12 =cxMenuBarRes [1]
    {	(hidingDefaultHelp =cxBoolean cx_false)
	(numMenus 1)
	(menuLabels @20)
	(menuResArray @21)
    }
)
(@13 =cxOPortField [1]
    {	(fieldDest "")
	(fieldOrigin =cxFieldSource cx_field_func)
	(f cx_field_func
	    {	(argNum 2)
	    }
	)
    }
)
(@14 =cxOPortField [1]
    {	(fieldDest "")
	(fieldOrigin =cxFieldSource cx_field_func)
	(f cx_field_func
	    {	(argNum 3)
	    }
	)
    }
)
(@15 =cxRange [1]
    {	(lo "1")
	(hi NULL)
    }
)
(@16 =cxRange [1]
    {	(lo "2")
	(hi "2")
    }
)
(@17 =cxRange [1]
    {	(lo "2")
	(hi "2")
    }
)
(@18 =cxRange [1]
    {	(lo "cx_compress_unique")
	(hi "cx_compress_unique")
    }
)
(@19 [8] "elevation" "slope" "drainage area" "voronoi area" "discharge"
"sediment flux" "shear stress" "grain size")
(@20 [1] "File")
(@21 =cxMenuRes [1]
    {	(numMenuItems 1)
	(menuItems @22)
    }
)
(@22 =cxMenuItem [1]
    {	(label "Open...")
	(type =cxMenuItemType cx_menu_pushbtn)
	(action =cxWidgetAction
	    {	(cmd =cxWidgetActionCmd cxFileSelectorAction)
		(u cxFileSelectorAction
		    {	(act =cxFileSelectorActionT
			    {	(paramName "File Name")
				(title "File Selector")
				(directory ".")
				(pattern "*")
			    }
			)
		    }
		)
	    }
	)
    }
)
